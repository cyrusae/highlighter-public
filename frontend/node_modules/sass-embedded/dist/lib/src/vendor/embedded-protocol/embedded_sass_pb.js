"use strict";
// source: build/embedded-protocol/embedded_sass.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();
goog.exportSymbol('proto.sass.embedded_protocol.CalculationOperator', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.InboundMessage', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.ResultCase', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.InboundMessage.CompileRequest', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.ImporterCase', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.InboundMessage.CompileRequest.InputCase', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.InboundMessage.FileImportResponse', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.InboundMessage.FileImportResponse.ResultCase', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.ResultCase', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.InboundMessage.ImportResponse', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.InboundMessage.ImportResponse.ResultCase', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.InboundMessage.MessageCase', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.InboundMessage.VersionRequest', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.ListSeparator', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.LogEventType', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.OutboundMessage', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.OutboundMessage.CompileResponse', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.OutboundMessage.CompileResponse.ResultCase', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.OutboundMessage.FileImportRequest', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.IdentifierCase', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.OutboundMessage.ImportRequest', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.OutboundMessage.LogEvent', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.OutboundMessage.MessageCase', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.OutboundMessage.VersionResponse', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.OutputStyle', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.ProtocolError', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.ProtocolErrorType', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.SingletonValue', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.SourceSpan', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.SourceSpan.SourceLocation', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.Syntax', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.Value', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.Value.ArgumentList', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.Value.Calculation', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.Value.Calculation.CalculationOperation', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.Value.Calculation.CalculationValue', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.Value.Calculation.CalculationValue.ValueCase', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.Value.CompilerFunction', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.Value.HostFunction', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.Value.HslColor', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.Value.HwbColor', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.Value.List', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.Value.Map', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.Value.Map.Entry', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.Value.Number', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.Value.RgbColor', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.Value.String', null, global);
goog.exportSymbol('proto.sass.embedded_protocol.Value.ValueCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.InboundMessage = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, proto.sass.embedded_protocol.InboundMessage.oneofGroups_);
};
goog.inherits(proto.sass.embedded_protocol.InboundMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.InboundMessage.displayName = 'proto.sass.embedded_protocol.InboundMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.InboundMessage.VersionRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sass.embedded_protocol.InboundMessage.VersionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.InboundMessage.VersionRequest.displayName = 'proto.sass.embedded_protocol.InboundMessage.VersionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.sass.embedded_protocol.InboundMessage.CompileRequest.repeatedFields_, proto.sass.embedded_protocol.InboundMessage.CompileRequest.oneofGroups_);
};
goog.inherits(proto.sass.embedded_protocol.InboundMessage.CompileRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.InboundMessage.CompileRequest.displayName = 'proto.sass.embedded_protocol.InboundMessage.CompileRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput.displayName = 'proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.oneofGroups_);
};
goog.inherits(proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.displayName = 'proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.oneofGroups_);
};
goog.inherits(proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.displayName = 'proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.InboundMessage.ImportResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, proto.sass.embedded_protocol.InboundMessage.ImportResponse.oneofGroups_);
};
goog.inherits(proto.sass.embedded_protocol.InboundMessage.ImportResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.InboundMessage.ImportResponse.displayName = 'proto.sass.embedded_protocol.InboundMessage.ImportResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess.displayName = 'proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.InboundMessage.FileImportResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, proto.sass.embedded_protocol.InboundMessage.FileImportResponse.oneofGroups_);
};
goog.inherits(proto.sass.embedded_protocol.InboundMessage.FileImportResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.InboundMessage.FileImportResponse.displayName = 'proto.sass.embedded_protocol.InboundMessage.FileImportResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.repeatedFields_, proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.oneofGroups_);
};
goog.inherits(proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.displayName = 'proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.OutboundMessage = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, proto.sass.embedded_protocol.OutboundMessage.oneofGroups_);
};
goog.inherits(proto.sass.embedded_protocol.OutboundMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.OutboundMessage.displayName = 'proto.sass.embedded_protocol.OutboundMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.OutboundMessage.VersionResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sass.embedded_protocol.OutboundMessage.VersionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.OutboundMessage.VersionResponse.displayName = 'proto.sass.embedded_protocol.OutboundMessage.VersionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, proto.sass.embedded_protocol.OutboundMessage.CompileResponse.oneofGroups_);
};
goog.inherits(proto.sass.embedded_protocol.OutboundMessage.CompileResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.OutboundMessage.CompileResponse.displayName = 'proto.sass.embedded_protocol.OutboundMessage.CompileResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess.repeatedFields_, null);
};
goog.inherits(proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess.displayName = 'proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure.displayName = 'proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.OutboundMessage.LogEvent = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sass.embedded_protocol.OutboundMessage.LogEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.OutboundMessage.LogEvent.displayName = 'proto.sass.embedded_protocol.OutboundMessage.LogEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest.displayName = 'proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.OutboundMessage.ImportRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sass.embedded_protocol.OutboundMessage.ImportRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.OutboundMessage.ImportRequest.displayName = 'proto.sass.embedded_protocol.OutboundMessage.ImportRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.OutboundMessage.FileImportRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sass.embedded_protocol.OutboundMessage.FileImportRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.OutboundMessage.FileImportRequest.displayName = 'proto.sass.embedded_protocol.OutboundMessage.FileImportRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.repeatedFields_, proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.oneofGroups_);
};
goog.inherits(proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.displayName = 'proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.ProtocolError = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sass.embedded_protocol.ProtocolError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.ProtocolError.displayName = 'proto.sass.embedded_protocol.ProtocolError';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.SourceSpan = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sass.embedded_protocol.SourceSpan, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.SourceSpan.displayName = 'proto.sass.embedded_protocol.SourceSpan';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.SourceSpan.SourceLocation = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sass.embedded_protocol.SourceSpan.SourceLocation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.SourceSpan.SourceLocation.displayName = 'proto.sass.embedded_protocol.SourceSpan.SourceLocation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.Value = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, proto.sass.embedded_protocol.Value.oneofGroups_);
};
goog.inherits(proto.sass.embedded_protocol.Value, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.Value.displayName = 'proto.sass.embedded_protocol.Value';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.Value.String = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sass.embedded_protocol.Value.String, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.Value.String.displayName = 'proto.sass.embedded_protocol.Value.String';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.Value.Number = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.sass.embedded_protocol.Value.Number.repeatedFields_, null);
};
goog.inherits(proto.sass.embedded_protocol.Value.Number, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.Value.Number.displayName = 'proto.sass.embedded_protocol.Value.Number';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.Value.RgbColor = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sass.embedded_protocol.Value.RgbColor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.Value.RgbColor.displayName = 'proto.sass.embedded_protocol.Value.RgbColor';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.Value.HslColor = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sass.embedded_protocol.Value.HslColor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.Value.HslColor.displayName = 'proto.sass.embedded_protocol.Value.HslColor';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.Value.HwbColor = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sass.embedded_protocol.Value.HwbColor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.Value.HwbColor.displayName = 'proto.sass.embedded_protocol.Value.HwbColor';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.Value.List = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.sass.embedded_protocol.Value.List.repeatedFields_, null);
};
goog.inherits(proto.sass.embedded_protocol.Value.List, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.Value.List.displayName = 'proto.sass.embedded_protocol.Value.List';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.Value.Map = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.sass.embedded_protocol.Value.Map.repeatedFields_, null);
};
goog.inherits(proto.sass.embedded_protocol.Value.Map, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.Value.Map.displayName = 'proto.sass.embedded_protocol.Value.Map';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.Value.Map.Entry = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sass.embedded_protocol.Value.Map.Entry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.Value.Map.Entry.displayName = 'proto.sass.embedded_protocol.Value.Map.Entry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.Value.CompilerFunction = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sass.embedded_protocol.Value.CompilerFunction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.Value.CompilerFunction.displayName = 'proto.sass.embedded_protocol.Value.CompilerFunction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.Value.HostFunction = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sass.embedded_protocol.Value.HostFunction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.Value.HostFunction.displayName = 'proto.sass.embedded_protocol.Value.HostFunction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.Value.ArgumentList = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.sass.embedded_protocol.Value.ArgumentList.repeatedFields_, null);
};
goog.inherits(proto.sass.embedded_protocol.Value.ArgumentList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.Value.ArgumentList.displayName = 'proto.sass.embedded_protocol.Value.ArgumentList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.Value.Calculation = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.sass.embedded_protocol.Value.Calculation.repeatedFields_, null);
};
goog.inherits(proto.sass.embedded_protocol.Value.Calculation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.Value.Calculation.displayName = 'proto.sass.embedded_protocol.Value.Calculation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationValue = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, proto.sass.embedded_protocol.Value.Calculation.CalculationValue.oneofGroups_);
};
goog.inherits(proto.sass.embedded_protocol.Value.Calculation.CalculationValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.Value.Calculation.CalculationValue.displayName = 'proto.sass.embedded_protocol.Value.Calculation.CalculationValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationOperation = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sass.embedded_protocol.Value.Calculation.CalculationOperation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.sass.embedded_protocol.Value.Calculation.CalculationOperation.displayName = 'proto.sass.embedded_protocol.Value.Calculation.CalculationOperation';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.sass.embedded_protocol.InboundMessage.oneofGroups_ = [[2, 3, 4, 5, 6, 7]];
/**
 * @enum {number}
 */
proto.sass.embedded_protocol.InboundMessage.MessageCase = {
    MESSAGE_NOT_SET: 0,
    COMPILE_REQUEST: 2,
    CANONICALIZE_RESPONSE: 3,
    IMPORT_RESPONSE: 4,
    FILE_IMPORT_RESPONSE: 5,
    FUNCTION_CALL_RESPONSE: 6,
    VERSION_REQUEST: 7
};
/**
 * @return {proto.sass.embedded_protocol.InboundMessage.MessageCase}
 */
proto.sass.embedded_protocol.InboundMessage.prototype.getMessageCase = function () {
    return /** @type {proto.sass.embedded_protocol.InboundMessage.MessageCase} */ (jspb.Message.computeOneofCase(this, proto.sass.embedded_protocol.InboundMessage.oneofGroups_[0]));
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.InboundMessage.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.InboundMessage.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.InboundMessage} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.InboundMessage.toObject = function (includeInstance, msg) {
        var f, obj = {
            compileRequest: (f = msg.getCompileRequest()) && proto.sass.embedded_protocol.InboundMessage.CompileRequest.toObject(includeInstance, f),
            canonicalizeResponse: (f = msg.getCanonicalizeResponse()) && proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.toObject(includeInstance, f),
            importResponse: (f = msg.getImportResponse()) && proto.sass.embedded_protocol.InboundMessage.ImportResponse.toObject(includeInstance, f),
            fileImportResponse: (f = msg.getFileImportResponse()) && proto.sass.embedded_protocol.InboundMessage.FileImportResponse.toObject(includeInstance, f),
            functionCallResponse: (f = msg.getFunctionCallResponse()) && proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.toObject(includeInstance, f),
            versionRequest: (f = msg.getVersionRequest()) && proto.sass.embedded_protocol.InboundMessage.VersionRequest.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.InboundMessage}
 */
proto.sass.embedded_protocol.InboundMessage.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.InboundMessage;
    return proto.sass.embedded_protocol.InboundMessage.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.InboundMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.InboundMessage}
 */
proto.sass.embedded_protocol.InboundMessage.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 2:
                var value = new proto.sass.embedded_protocol.InboundMessage.CompileRequest;
                reader.readMessage(value, proto.sass.embedded_protocol.InboundMessage.CompileRequest.deserializeBinaryFromReader);
                msg.setCompileRequest(value);
                break;
            case 3:
                var value = new proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse;
                reader.readMessage(value, proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.deserializeBinaryFromReader);
                msg.setCanonicalizeResponse(value);
                break;
            case 4:
                var value = new proto.sass.embedded_protocol.InboundMessage.ImportResponse;
                reader.readMessage(value, proto.sass.embedded_protocol.InboundMessage.ImportResponse.deserializeBinaryFromReader);
                msg.setImportResponse(value);
                break;
            case 5:
                var value = new proto.sass.embedded_protocol.InboundMessage.FileImportResponse;
                reader.readMessage(value, proto.sass.embedded_protocol.InboundMessage.FileImportResponse.deserializeBinaryFromReader);
                msg.setFileImportResponse(value);
                break;
            case 6:
                var value = new proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse;
                reader.readMessage(value, proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.deserializeBinaryFromReader);
                msg.setFunctionCallResponse(value);
                break;
            case 7:
                var value = new proto.sass.embedded_protocol.InboundMessage.VersionRequest;
                reader.readMessage(value, proto.sass.embedded_protocol.InboundMessage.VersionRequest.deserializeBinaryFromReader);
                msg.setVersionRequest(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.InboundMessage.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.InboundMessage.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.InboundMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.InboundMessage.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getCompileRequest();
    if (f != null) {
        writer.writeMessage(2, f, proto.sass.embedded_protocol.InboundMessage.CompileRequest.serializeBinaryToWriter);
    }
    f = message.getCanonicalizeResponse();
    if (f != null) {
        writer.writeMessage(3, f, proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.serializeBinaryToWriter);
    }
    f = message.getImportResponse();
    if (f != null) {
        writer.writeMessage(4, f, proto.sass.embedded_protocol.InboundMessage.ImportResponse.serializeBinaryToWriter);
    }
    f = message.getFileImportResponse();
    if (f != null) {
        writer.writeMessage(5, f, proto.sass.embedded_protocol.InboundMessage.FileImportResponse.serializeBinaryToWriter);
    }
    f = message.getFunctionCallResponse();
    if (f != null) {
        writer.writeMessage(6, f, proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.serializeBinaryToWriter);
    }
    f = message.getVersionRequest();
    if (f != null) {
        writer.writeMessage(7, f, proto.sass.embedded_protocol.InboundMessage.VersionRequest.serializeBinaryToWriter);
    }
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.InboundMessage.VersionRequest.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.InboundMessage.VersionRequest.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.InboundMessage.VersionRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.InboundMessage.VersionRequest.toObject = function (includeInstance, msg) {
        var f, obj = {
            id: jspb.Message.getFieldWithDefault(msg, 1, 0)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.InboundMessage.VersionRequest}
 */
proto.sass.embedded_protocol.InboundMessage.VersionRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.InboundMessage.VersionRequest;
    return proto.sass.embedded_protocol.InboundMessage.VersionRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.InboundMessage.VersionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.InboundMessage.VersionRequest}
 */
proto.sass.embedded_protocol.InboundMessage.VersionRequest.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setId(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.InboundMessage.VersionRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.InboundMessage.VersionRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.InboundMessage.VersionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.InboundMessage.VersionRequest.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getId();
    if (f !== 0) {
        writer.writeUint32(1, f);
    }
};
/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.sass.embedded_protocol.InboundMessage.VersionRequest.prototype.getId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.VersionRequest} returns this
 */
proto.sass.embedded_protocol.InboundMessage.VersionRequest.prototype.setId = function (value) {
    return jspb.Message.setProto3IntField(this, 1, value);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.repeatedFields_ = [6, 7];
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.oneofGroups_ = [[2, 3]];
/**
 * @enum {number}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.InputCase = {
    INPUT_NOT_SET: 0,
    STRING: 2,
    PATH: 3
};
/**
 * @return {proto.sass.embedded_protocol.InboundMessage.CompileRequest.InputCase}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.getInputCase = function () {
    return /** @type {proto.sass.embedded_protocol.InboundMessage.CompileRequest.InputCase} */ (jspb.Message.computeOneofCase(this, proto.sass.embedded_protocol.InboundMessage.CompileRequest.oneofGroups_[0]));
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.InboundMessage.CompileRequest.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.InboundMessage.CompileRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.InboundMessage.CompileRequest.toObject = function (includeInstance, msg) {
        var f, obj = {
            id: jspb.Message.getFieldWithDefault(msg, 1, 0),
            string: (f = msg.getString()) && proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput.toObject(includeInstance, f),
            path: jspb.Message.getFieldWithDefault(msg, 3, ""),
            style: jspb.Message.getFieldWithDefault(msg, 4, 0),
            sourceMap: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
            importersList: jspb.Message.toObjectList(msg.getImportersList(), proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.toObject, includeInstance),
            globalFunctionsList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
            alertColor: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
            alertAscii: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
            verbose: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
            quietDeps: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
            sourceMapIncludeSources: jspb.Message.getBooleanFieldWithDefault(msg, 12, false)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.InboundMessage.CompileRequest;
    return proto.sass.embedded_protocol.InboundMessage.CompileRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.InboundMessage.CompileRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setId(value);
                break;
            case 2:
                var value = new proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput;
                reader.readMessage(value, proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput.deserializeBinaryFromReader);
                msg.setString(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setPath(value);
                break;
            case 4:
                var value = /** @type {!proto.sass.embedded_protocol.OutputStyle} */ (reader.readEnum());
                msg.setStyle(value);
                break;
            case 5:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setSourceMap(value);
                break;
            case 6:
                var value = new proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer;
                reader.readMessage(value, proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.deserializeBinaryFromReader);
                msg.addImporters(value);
                break;
            case 7:
                var value = /** @type {string} */ (reader.readString());
                msg.addGlobalFunctions(value);
                break;
            case 8:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setAlertColor(value);
                break;
            case 9:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setAlertAscii(value);
                break;
            case 10:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setVerbose(value);
                break;
            case 11:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setQuietDeps(value);
                break;
            case 12:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setSourceMapIncludeSources(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.InboundMessage.CompileRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.InboundMessage.CompileRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getId();
    if (f !== 0) {
        writer.writeUint32(1, f);
    }
    f = message.getString();
    if (f != null) {
        writer.writeMessage(2, f, proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = message.getStyle();
    if (f !== 0.0) {
        writer.writeEnum(4, f);
    }
    f = message.getSourceMap();
    if (f) {
        writer.writeBool(5, f);
    }
    f = message.getImportersList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(6, f, proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.serializeBinaryToWriter);
    }
    f = message.getGlobalFunctionsList();
    if (f.length > 0) {
        writer.writeRepeatedString(7, f);
    }
    f = message.getAlertColor();
    if (f) {
        writer.writeBool(8, f);
    }
    f = message.getAlertAscii();
    if (f) {
        writer.writeBool(9, f);
    }
    f = message.getVerbose();
    if (f) {
        writer.writeBool(10, f);
    }
    f = message.getQuietDeps();
    if (f) {
        writer.writeBool(11, f);
    }
    f = message.getSourceMapIncludeSources();
    if (f) {
        writer.writeBool(12, f);
    }
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput.toObject = function (includeInstance, msg) {
        var f, obj = {
            source: jspb.Message.getFieldWithDefault(msg, 1, ""),
            url: jspb.Message.getFieldWithDefault(msg, 2, ""),
            syntax: jspb.Message.getFieldWithDefault(msg, 3, 0),
            importer: (f = msg.getImporter()) && proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput;
    return proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setSource(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setUrl(value);
                break;
            case 3:
                var value = /** @type {!proto.sass.embedded_protocol.Syntax} */ (reader.readEnum());
                msg.setSyntax(value);
                break;
            case 4:
                var value = new proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer;
                reader.readMessage(value, proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.deserializeBinaryFromReader);
                msg.setImporter(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getSource();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getUrl();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getSyntax();
    if (f !== 0.0) {
        writer.writeEnum(3, f);
    }
    f = message.getImporter();
    if (f != null) {
        writer.writeMessage(4, f, proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.serializeBinaryToWriter);
    }
};
/**
 * optional string source = 1;
 * @return {string}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput.prototype.getSource = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput} returns this
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput.prototype.setSource = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string url = 2;
 * @return {string}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput.prototype.getUrl = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput} returns this
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput.prototype.setUrl = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * optional Syntax syntax = 3;
 * @return {!proto.sass.embedded_protocol.Syntax}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput.prototype.getSyntax = function () {
    return /** @type {!proto.sass.embedded_protocol.Syntax} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};
/**
 * @param {!proto.sass.embedded_protocol.Syntax} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput} returns this
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput.prototype.setSyntax = function (value) {
    return jspb.Message.setProto3EnumField(this, 3, value);
};
/**
 * optional Importer importer = 4;
 * @return {?proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput.prototype.getImporter = function () {
    return /** @type{?proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer, 4));
};
/**
 * @param {?proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer|undefined} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput} returns this
*/
proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput.prototype.setImporter = function (value) {
    return jspb.Message.setWrapperField(this, 4, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput} returns this
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput.prototype.clearImporter = function () {
    return this.setImporter(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput.prototype.hasImporter = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.oneofGroups_ = [[1, 2, 3]];
/**
 * @enum {number}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.ImporterCase = {
    IMPORTER_NOT_SET: 0,
    PATH: 1,
    IMPORTER_ID: 2,
    FILE_IMPORTER_ID: 3
};
/**
 * @return {proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.ImporterCase}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.prototype.getImporterCase = function () {
    return /** @type {proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.ImporterCase} */ (jspb.Message.computeOneofCase(this, proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.oneofGroups_[0]));
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.toObject = function (includeInstance, msg) {
        var f, obj = {
            path: jspb.Message.getFieldWithDefault(msg, 1, ""),
            importerId: jspb.Message.getFieldWithDefault(msg, 2, 0),
            fileImporterId: jspb.Message.getFieldWithDefault(msg, 3, 0)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer;
    return proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setPath(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setImporterId(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setFileImporterId(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeUint32(2, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeUint32(3, f);
    }
};
/**
 * optional string path = 1;
 * @return {string}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.prototype.getPath = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer} returns this
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.prototype.setPath = function (value) {
    return jspb.Message.setOneofField(this, 1, proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.oneofGroups_[0], value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer} returns this
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.prototype.clearPath = function () {
    return jspb.Message.setOneofField(this, 1, proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.oneofGroups_[0], undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.prototype.hasPath = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional uint32 importer_id = 2;
 * @return {number}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.prototype.getImporterId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer} returns this
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.prototype.setImporterId = function (value) {
    return jspb.Message.setOneofField(this, 2, proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.oneofGroups_[0], value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer} returns this
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.prototype.clearImporterId = function () {
    return jspb.Message.setOneofField(this, 2, proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.oneofGroups_[0], undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.prototype.hasImporterId = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional uint32 file_importer_id = 3;
 * @return {number}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.prototype.getFileImporterId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer} returns this
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.prototype.setFileImporterId = function (value) {
    return jspb.Message.setOneofField(this, 3, proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.oneofGroups_[0], value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer} returns this
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.prototype.clearFileImporterId = function () {
    return jspb.Message.setOneofField(this, 3, proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.oneofGroups_[0], undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer.prototype.hasFileImporterId = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.getId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest} returns this
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.setId = function (value) {
    return jspb.Message.setProto3IntField(this, 1, value);
};
/**
 * optional StringInput string = 2;
 * @return {?proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.getString = function () {
    return /** @type{?proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput, 2));
};
/**
 * @param {?proto.sass.embedded_protocol.InboundMessage.CompileRequest.StringInput|undefined} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest} returns this
*/
proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.setString = function (value) {
    return jspb.Message.setOneofWrapperField(this, 2, proto.sass.embedded_protocol.InboundMessage.CompileRequest.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest} returns this
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.clearString = function () {
    return this.setString(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.hasString = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string path = 3;
 * @return {string}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.getPath = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest} returns this
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.setPath = function (value) {
    return jspb.Message.setOneofField(this, 3, proto.sass.embedded_protocol.InboundMessage.CompileRequest.oneofGroups_[0], value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest} returns this
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.clearPath = function () {
    return jspb.Message.setOneofField(this, 3, proto.sass.embedded_protocol.InboundMessage.CompileRequest.oneofGroups_[0], undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.hasPath = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional OutputStyle style = 4;
 * @return {!proto.sass.embedded_protocol.OutputStyle}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.getStyle = function () {
    return /** @type {!proto.sass.embedded_protocol.OutputStyle} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};
/**
 * @param {!proto.sass.embedded_protocol.OutputStyle} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest} returns this
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.setStyle = function (value) {
    return jspb.Message.setProto3EnumField(this, 4, value);
};
/**
 * optional bool source_map = 5;
 * @return {boolean}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.getSourceMap = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};
/**
 * @param {boolean} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest} returns this
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.setSourceMap = function (value) {
    return jspb.Message.setProto3BooleanField(this, 5, value);
};
/**
 * repeated Importer importers = 6;
 * @return {!Array<!proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer>}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.getImportersList = function () {
    return /** @type{!Array<!proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer>} */ (jspb.Message.getRepeatedWrapperField(this, proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer, 6));
};
/**
 * @param {!Array<!proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer>} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest} returns this
*/
proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.setImportersList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 6, value);
};
/**
 * @param {!proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.addImporters = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.sass.embedded_protocol.InboundMessage.CompileRequest.Importer, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest} returns this
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.clearImportersList = function () {
    return this.setImportersList([]);
};
/**
 * repeated string global_functions = 7;
 * @return {!Array<string>}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.getGlobalFunctionsList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest} returns this
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.setGlobalFunctionsList = function (value) {
    return jspb.Message.setField(this, 7, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest} returns this
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.addGlobalFunctions = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest} returns this
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.clearGlobalFunctionsList = function () {
    return this.setGlobalFunctionsList([]);
};
/**
 * optional bool alert_color = 8;
 * @return {boolean}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.getAlertColor = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};
/**
 * @param {boolean} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest} returns this
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.setAlertColor = function (value) {
    return jspb.Message.setProto3BooleanField(this, 8, value);
};
/**
 * optional bool alert_ascii = 9;
 * @return {boolean}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.getAlertAscii = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};
/**
 * @param {boolean} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest} returns this
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.setAlertAscii = function (value) {
    return jspb.Message.setProto3BooleanField(this, 9, value);
};
/**
 * optional bool verbose = 10;
 * @return {boolean}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.getVerbose = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};
/**
 * @param {boolean} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest} returns this
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.setVerbose = function (value) {
    return jspb.Message.setProto3BooleanField(this, 10, value);
};
/**
 * optional bool quiet_deps = 11;
 * @return {boolean}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.getQuietDeps = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};
/**
 * @param {boolean} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest} returns this
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.setQuietDeps = function (value) {
    return jspb.Message.setProto3BooleanField(this, 11, value);
};
/**
 * optional bool source_map_include_sources = 12;
 * @return {boolean}
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.getSourceMapIncludeSources = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};
/**
 * @param {boolean} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.CompileRequest} returns this
 */
proto.sass.embedded_protocol.InboundMessage.CompileRequest.prototype.setSourceMapIncludeSources = function (value) {
    return jspb.Message.setProto3BooleanField(this, 12, value);
};
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.oneofGroups_ = [[2, 3]];
/**
 * @enum {number}
 */
proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.ResultCase = {
    RESULT_NOT_SET: 0,
    URL: 2,
    ERROR: 3
};
/**
 * @return {proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.ResultCase}
 */
proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.prototype.getResultCase = function () {
    return /** @type {proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.ResultCase} */ (jspb.Message.computeOneofCase(this, proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.oneofGroups_[0]));
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.toObject = function (includeInstance, msg) {
        var f, obj = {
            id: jspb.Message.getFieldWithDefault(msg, 1, 0),
            url: jspb.Message.getFieldWithDefault(msg, 2, ""),
            error: jspb.Message.getFieldWithDefault(msg, 3, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse}
 */
proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse;
    return proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse}
 */
proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setId(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setUrl(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setError(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getId();
    if (f !== 0) {
        writer.writeUint32(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
};
/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.prototype.getId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse} returns this
 */
proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.prototype.setId = function (value) {
    return jspb.Message.setProto3IntField(this, 1, value);
};
/**
 * optional string url = 2;
 * @return {string}
 */
proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.prototype.getUrl = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse} returns this
 */
proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.prototype.setUrl = function (value) {
    return jspb.Message.setOneofField(this, 2, proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.oneofGroups_[0], value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse} returns this
 */
proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.prototype.clearUrl = function () {
    return jspb.Message.setOneofField(this, 2, proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.oneofGroups_[0], undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.prototype.hasUrl = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string error = 3;
 * @return {string}
 */
proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.prototype.getError = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse} returns this
 */
proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.prototype.setError = function (value) {
    return jspb.Message.setOneofField(this, 3, proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.oneofGroups_[0], value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse} returns this
 */
proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.prototype.clearError = function () {
    return jspb.Message.setOneofField(this, 3, proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.oneofGroups_[0], undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse.prototype.hasError = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.sass.embedded_protocol.InboundMessage.ImportResponse.oneofGroups_ = [[2, 3]];
/**
 * @enum {number}
 */
proto.sass.embedded_protocol.InboundMessage.ImportResponse.ResultCase = {
    RESULT_NOT_SET: 0,
    SUCCESS: 2,
    ERROR: 3
};
/**
 * @return {proto.sass.embedded_protocol.InboundMessage.ImportResponse.ResultCase}
 */
proto.sass.embedded_protocol.InboundMessage.ImportResponse.prototype.getResultCase = function () {
    return /** @type {proto.sass.embedded_protocol.InboundMessage.ImportResponse.ResultCase} */ (jspb.Message.computeOneofCase(this, proto.sass.embedded_protocol.InboundMessage.ImportResponse.oneofGroups_[0]));
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.InboundMessage.ImportResponse.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.InboundMessage.ImportResponse.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.InboundMessage.ImportResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.InboundMessage.ImportResponse.toObject = function (includeInstance, msg) {
        var f, obj = {
            id: jspb.Message.getFieldWithDefault(msg, 1, 0),
            success: (f = msg.getSuccess()) && proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess.toObject(includeInstance, f),
            error: jspb.Message.getFieldWithDefault(msg, 3, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.InboundMessage.ImportResponse}
 */
proto.sass.embedded_protocol.InboundMessage.ImportResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.InboundMessage.ImportResponse;
    return proto.sass.embedded_protocol.InboundMessage.ImportResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.InboundMessage.ImportResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.InboundMessage.ImportResponse}
 */
proto.sass.embedded_protocol.InboundMessage.ImportResponse.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setId(value);
                break;
            case 2:
                var value = new proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess;
                reader.readMessage(value, proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess.deserializeBinaryFromReader);
                msg.setSuccess(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setError(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.InboundMessage.ImportResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.InboundMessage.ImportResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.InboundMessage.ImportResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.InboundMessage.ImportResponse.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getId();
    if (f !== 0) {
        writer.writeUint32(1, f);
    }
    f = message.getSuccess();
    if (f != null) {
        writer.writeMessage(2, f, proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess.toObject = function (includeInstance, msg) {
        var f, obj = {
            contents: jspb.Message.getFieldWithDefault(msg, 1, ""),
            syntax: jspb.Message.getFieldWithDefault(msg, 2, 0),
            sourceMapUrl: jspb.Message.getFieldWithDefault(msg, 3, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess}
 */
proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess;
    return proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess}
 */
proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setContents(value);
                break;
            case 2:
                var value = /** @type {!proto.sass.embedded_protocol.Syntax} */ (reader.readEnum());
                msg.setSyntax(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setSourceMapUrl(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getContents();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getSyntax();
    if (f !== 0.0) {
        writer.writeEnum(2, f);
    }
    f = message.getSourceMapUrl();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
};
/**
 * optional string contents = 1;
 * @return {string}
 */
proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess.prototype.getContents = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess} returns this
 */
proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess.prototype.setContents = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional Syntax syntax = 2;
 * @return {!proto.sass.embedded_protocol.Syntax}
 */
proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess.prototype.getSyntax = function () {
    return /** @type {!proto.sass.embedded_protocol.Syntax} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};
/**
 * @param {!proto.sass.embedded_protocol.Syntax} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess} returns this
 */
proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess.prototype.setSyntax = function (value) {
    return jspb.Message.setProto3EnumField(this, 2, value);
};
/**
 * optional string source_map_url = 3;
 * @return {string}
 */
proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess.prototype.getSourceMapUrl = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess} returns this
 */
proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess.prototype.setSourceMapUrl = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};
/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.sass.embedded_protocol.InboundMessage.ImportResponse.prototype.getId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.ImportResponse} returns this
 */
proto.sass.embedded_protocol.InboundMessage.ImportResponse.prototype.setId = function (value) {
    return jspb.Message.setProto3IntField(this, 1, value);
};
/**
 * optional ImportSuccess success = 2;
 * @return {?proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess}
 */
proto.sass.embedded_protocol.InboundMessage.ImportResponse.prototype.getSuccess = function () {
    return /** @type{?proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess, 2));
};
/**
 * @param {?proto.sass.embedded_protocol.InboundMessage.ImportResponse.ImportSuccess|undefined} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.ImportResponse} returns this
*/
proto.sass.embedded_protocol.InboundMessage.ImportResponse.prototype.setSuccess = function (value) {
    return jspb.Message.setOneofWrapperField(this, 2, proto.sass.embedded_protocol.InboundMessage.ImportResponse.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.InboundMessage.ImportResponse} returns this
 */
proto.sass.embedded_protocol.InboundMessage.ImportResponse.prototype.clearSuccess = function () {
    return this.setSuccess(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.InboundMessage.ImportResponse.prototype.hasSuccess = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string error = 3;
 * @return {string}
 */
proto.sass.embedded_protocol.InboundMessage.ImportResponse.prototype.getError = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.ImportResponse} returns this
 */
proto.sass.embedded_protocol.InboundMessage.ImportResponse.prototype.setError = function (value) {
    return jspb.Message.setOneofField(this, 3, proto.sass.embedded_protocol.InboundMessage.ImportResponse.oneofGroups_[0], value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.sass.embedded_protocol.InboundMessage.ImportResponse} returns this
 */
proto.sass.embedded_protocol.InboundMessage.ImportResponse.prototype.clearError = function () {
    return jspb.Message.setOneofField(this, 3, proto.sass.embedded_protocol.InboundMessage.ImportResponse.oneofGroups_[0], undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.InboundMessage.ImportResponse.prototype.hasError = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.sass.embedded_protocol.InboundMessage.FileImportResponse.oneofGroups_ = [[2, 3]];
/**
 * @enum {number}
 */
proto.sass.embedded_protocol.InboundMessage.FileImportResponse.ResultCase = {
    RESULT_NOT_SET: 0,
    FILE_URL: 2,
    ERROR: 3
};
/**
 * @return {proto.sass.embedded_protocol.InboundMessage.FileImportResponse.ResultCase}
 */
proto.sass.embedded_protocol.InboundMessage.FileImportResponse.prototype.getResultCase = function () {
    return /** @type {proto.sass.embedded_protocol.InboundMessage.FileImportResponse.ResultCase} */ (jspb.Message.computeOneofCase(this, proto.sass.embedded_protocol.InboundMessage.FileImportResponse.oneofGroups_[0]));
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.InboundMessage.FileImportResponse.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.InboundMessage.FileImportResponse.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.InboundMessage.FileImportResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.InboundMessage.FileImportResponse.toObject = function (includeInstance, msg) {
        var f, obj = {
            id: jspb.Message.getFieldWithDefault(msg, 1, 0),
            fileUrl: jspb.Message.getFieldWithDefault(msg, 2, ""),
            error: jspb.Message.getFieldWithDefault(msg, 3, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.InboundMessage.FileImportResponse}
 */
proto.sass.embedded_protocol.InboundMessage.FileImportResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.InboundMessage.FileImportResponse;
    return proto.sass.embedded_protocol.InboundMessage.FileImportResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.InboundMessage.FileImportResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.InboundMessage.FileImportResponse}
 */
proto.sass.embedded_protocol.InboundMessage.FileImportResponse.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setId(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setFileUrl(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setError(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.InboundMessage.FileImportResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.InboundMessage.FileImportResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.InboundMessage.FileImportResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.InboundMessage.FileImportResponse.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getId();
    if (f !== 0) {
        writer.writeUint32(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
};
/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.sass.embedded_protocol.InboundMessage.FileImportResponse.prototype.getId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.FileImportResponse} returns this
 */
proto.sass.embedded_protocol.InboundMessage.FileImportResponse.prototype.setId = function (value) {
    return jspb.Message.setProto3IntField(this, 1, value);
};
/**
 * optional string file_url = 2;
 * @return {string}
 */
proto.sass.embedded_protocol.InboundMessage.FileImportResponse.prototype.getFileUrl = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.FileImportResponse} returns this
 */
proto.sass.embedded_protocol.InboundMessage.FileImportResponse.prototype.setFileUrl = function (value) {
    return jspb.Message.setOneofField(this, 2, proto.sass.embedded_protocol.InboundMessage.FileImportResponse.oneofGroups_[0], value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.sass.embedded_protocol.InboundMessage.FileImportResponse} returns this
 */
proto.sass.embedded_protocol.InboundMessage.FileImportResponse.prototype.clearFileUrl = function () {
    return jspb.Message.setOneofField(this, 2, proto.sass.embedded_protocol.InboundMessage.FileImportResponse.oneofGroups_[0], undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.InboundMessage.FileImportResponse.prototype.hasFileUrl = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string error = 3;
 * @return {string}
 */
proto.sass.embedded_protocol.InboundMessage.FileImportResponse.prototype.getError = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.FileImportResponse} returns this
 */
proto.sass.embedded_protocol.InboundMessage.FileImportResponse.prototype.setError = function (value) {
    return jspb.Message.setOneofField(this, 3, proto.sass.embedded_protocol.InboundMessage.FileImportResponse.oneofGroups_[0], value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.sass.embedded_protocol.InboundMessage.FileImportResponse} returns this
 */
proto.sass.embedded_protocol.InboundMessage.FileImportResponse.prototype.clearError = function () {
    return jspb.Message.setOneofField(this, 3, proto.sass.embedded_protocol.InboundMessage.FileImportResponse.oneofGroups_[0], undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.InboundMessage.FileImportResponse.prototype.hasError = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.repeatedFields_ = [4];
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.oneofGroups_ = [[2, 3]];
/**
 * @enum {number}
 */
proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.ResultCase = {
    RESULT_NOT_SET: 0,
    SUCCESS: 2,
    ERROR: 3
};
/**
 * @return {proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.ResultCase}
 */
proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.prototype.getResultCase = function () {
    return /** @type {proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.ResultCase} */ (jspb.Message.computeOneofCase(this, proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.oneofGroups_[0]));
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.toObject = function (includeInstance, msg) {
        var f, obj = {
            id: jspb.Message.getFieldWithDefault(msg, 1, 0),
            success: (f = msg.getSuccess()) && proto.sass.embedded_protocol.Value.toObject(includeInstance, f),
            error: jspb.Message.getFieldWithDefault(msg, 3, ""),
            accessedArgumentListsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse}
 */
proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse;
    return proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse}
 */
proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setId(value);
                break;
            case 2:
                var value = new proto.sass.embedded_protocol.Value;
                reader.readMessage(value, proto.sass.embedded_protocol.Value.deserializeBinaryFromReader);
                msg.setSuccess(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setError(value);
                break;
            case 4:
                var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
                msg.setAccessedArgumentListsList(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getId();
    if (f !== 0) {
        writer.writeUint32(1, f);
    }
    f = message.getSuccess();
    if (f != null) {
        writer.writeMessage(2, f, proto.sass.embedded_protocol.Value.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = message.getAccessedArgumentListsList();
    if (f.length > 0) {
        writer.writePackedUint32(4, f);
    }
};
/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.prototype.getId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse} returns this
 */
proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.prototype.setId = function (value) {
    return jspb.Message.setProto3IntField(this, 1, value);
};
/**
 * optional Value success = 2;
 * @return {?proto.sass.embedded_protocol.Value}
 */
proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.prototype.getSuccess = function () {
    return /** @type{?proto.sass.embedded_protocol.Value} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.Value, 2));
};
/**
 * @param {?proto.sass.embedded_protocol.Value|undefined} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse} returns this
*/
proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.prototype.setSuccess = function (value) {
    return jspb.Message.setOneofWrapperField(this, 2, proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse} returns this
 */
proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.prototype.clearSuccess = function () {
    return this.setSuccess(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.prototype.hasSuccess = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string error = 3;
 * @return {string}
 */
proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.prototype.getError = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse} returns this
 */
proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.prototype.setError = function (value) {
    return jspb.Message.setOneofField(this, 3, proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.oneofGroups_[0], value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse} returns this
 */
proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.prototype.clearError = function () {
    return jspb.Message.setOneofField(this, 3, proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.oneofGroups_[0], undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.prototype.hasError = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * repeated uint32 accessed_argument_lists = 4;
 * @return {!Array<number>}
 */
proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.prototype.getAccessedArgumentListsList = function () {
    return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};
/**
 * @param {!Array<number>} value
 * @return {!proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse} returns this
 */
proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.prototype.setAccessedArgumentListsList = function (value) {
    return jspb.Message.setField(this, 4, value || []);
};
/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse} returns this
 */
proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.prototype.addAccessedArgumentLists = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse} returns this
 */
proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse.prototype.clearAccessedArgumentListsList = function () {
    return this.setAccessedArgumentListsList([]);
};
/**
 * optional CompileRequest compile_request = 2;
 * @return {?proto.sass.embedded_protocol.InboundMessage.CompileRequest}
 */
proto.sass.embedded_protocol.InboundMessage.prototype.getCompileRequest = function () {
    return /** @type{?proto.sass.embedded_protocol.InboundMessage.CompileRequest} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.InboundMessage.CompileRequest, 2));
};
/**
 * @param {?proto.sass.embedded_protocol.InboundMessage.CompileRequest|undefined} value
 * @return {!proto.sass.embedded_protocol.InboundMessage} returns this
*/
proto.sass.embedded_protocol.InboundMessage.prototype.setCompileRequest = function (value) {
    return jspb.Message.setOneofWrapperField(this, 2, proto.sass.embedded_protocol.InboundMessage.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.InboundMessage} returns this
 */
proto.sass.embedded_protocol.InboundMessage.prototype.clearCompileRequest = function () {
    return this.setCompileRequest(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.InboundMessage.prototype.hasCompileRequest = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional CanonicalizeResponse canonicalize_response = 3;
 * @return {?proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse}
 */
proto.sass.embedded_protocol.InboundMessage.prototype.getCanonicalizeResponse = function () {
    return /** @type{?proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse, 3));
};
/**
 * @param {?proto.sass.embedded_protocol.InboundMessage.CanonicalizeResponse|undefined} value
 * @return {!proto.sass.embedded_protocol.InboundMessage} returns this
*/
proto.sass.embedded_protocol.InboundMessage.prototype.setCanonicalizeResponse = function (value) {
    return jspb.Message.setOneofWrapperField(this, 3, proto.sass.embedded_protocol.InboundMessage.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.InboundMessage} returns this
 */
proto.sass.embedded_protocol.InboundMessage.prototype.clearCanonicalizeResponse = function () {
    return this.setCanonicalizeResponse(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.InboundMessage.prototype.hasCanonicalizeResponse = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional ImportResponse import_response = 4;
 * @return {?proto.sass.embedded_protocol.InboundMessage.ImportResponse}
 */
proto.sass.embedded_protocol.InboundMessage.prototype.getImportResponse = function () {
    return /** @type{?proto.sass.embedded_protocol.InboundMessage.ImportResponse} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.InboundMessage.ImportResponse, 4));
};
/**
 * @param {?proto.sass.embedded_protocol.InboundMessage.ImportResponse|undefined} value
 * @return {!proto.sass.embedded_protocol.InboundMessage} returns this
*/
proto.sass.embedded_protocol.InboundMessage.prototype.setImportResponse = function (value) {
    return jspb.Message.setOneofWrapperField(this, 4, proto.sass.embedded_protocol.InboundMessage.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.InboundMessage} returns this
 */
proto.sass.embedded_protocol.InboundMessage.prototype.clearImportResponse = function () {
    return this.setImportResponse(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.InboundMessage.prototype.hasImportResponse = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional FileImportResponse file_import_response = 5;
 * @return {?proto.sass.embedded_protocol.InboundMessage.FileImportResponse}
 */
proto.sass.embedded_protocol.InboundMessage.prototype.getFileImportResponse = function () {
    return /** @type{?proto.sass.embedded_protocol.InboundMessage.FileImportResponse} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.InboundMessage.FileImportResponse, 5));
};
/**
 * @param {?proto.sass.embedded_protocol.InboundMessage.FileImportResponse|undefined} value
 * @return {!proto.sass.embedded_protocol.InboundMessage} returns this
*/
proto.sass.embedded_protocol.InboundMessage.prototype.setFileImportResponse = function (value) {
    return jspb.Message.setOneofWrapperField(this, 5, proto.sass.embedded_protocol.InboundMessage.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.InboundMessage} returns this
 */
proto.sass.embedded_protocol.InboundMessage.prototype.clearFileImportResponse = function () {
    return this.setFileImportResponse(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.InboundMessage.prototype.hasFileImportResponse = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional FunctionCallResponse function_call_response = 6;
 * @return {?proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse}
 */
proto.sass.embedded_protocol.InboundMessage.prototype.getFunctionCallResponse = function () {
    return /** @type{?proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse, 6));
};
/**
 * @param {?proto.sass.embedded_protocol.InboundMessage.FunctionCallResponse|undefined} value
 * @return {!proto.sass.embedded_protocol.InboundMessage} returns this
*/
proto.sass.embedded_protocol.InboundMessage.prototype.setFunctionCallResponse = function (value) {
    return jspb.Message.setOneofWrapperField(this, 6, proto.sass.embedded_protocol.InboundMessage.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.InboundMessage} returns this
 */
proto.sass.embedded_protocol.InboundMessage.prototype.clearFunctionCallResponse = function () {
    return this.setFunctionCallResponse(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.InboundMessage.prototype.hasFunctionCallResponse = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * optional VersionRequest version_request = 7;
 * @return {?proto.sass.embedded_protocol.InboundMessage.VersionRequest}
 */
proto.sass.embedded_protocol.InboundMessage.prototype.getVersionRequest = function () {
    return /** @type{?proto.sass.embedded_protocol.InboundMessage.VersionRequest} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.InboundMessage.VersionRequest, 7));
};
/**
 * @param {?proto.sass.embedded_protocol.InboundMessage.VersionRequest|undefined} value
 * @return {!proto.sass.embedded_protocol.InboundMessage} returns this
*/
proto.sass.embedded_protocol.InboundMessage.prototype.setVersionRequest = function (value) {
    return jspb.Message.setOneofWrapperField(this, 7, proto.sass.embedded_protocol.InboundMessage.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.InboundMessage} returns this
 */
proto.sass.embedded_protocol.InboundMessage.prototype.clearVersionRequest = function () {
    return this.setVersionRequest(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.InboundMessage.prototype.hasVersionRequest = function () {
    return jspb.Message.getField(this, 7) != null;
};
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.sass.embedded_protocol.OutboundMessage.oneofGroups_ = [[1, 2, 3, 4, 5, 6, 7, 8]];
/**
 * @enum {number}
 */
proto.sass.embedded_protocol.OutboundMessage.MessageCase = {
    MESSAGE_NOT_SET: 0,
    ERROR: 1,
    COMPILE_RESPONSE: 2,
    LOG_EVENT: 3,
    CANONICALIZE_REQUEST: 4,
    IMPORT_REQUEST: 5,
    FILE_IMPORT_REQUEST: 6,
    FUNCTION_CALL_REQUEST: 7,
    VERSION_RESPONSE: 8
};
/**
 * @return {proto.sass.embedded_protocol.OutboundMessage.MessageCase}
 */
proto.sass.embedded_protocol.OutboundMessage.prototype.getMessageCase = function () {
    return /** @type {proto.sass.embedded_protocol.OutboundMessage.MessageCase} */ (jspb.Message.computeOneofCase(this, proto.sass.embedded_protocol.OutboundMessage.oneofGroups_[0]));
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.OutboundMessage.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.OutboundMessage.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.OutboundMessage} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.OutboundMessage.toObject = function (includeInstance, msg) {
        var f, obj = {
            error: (f = msg.getError()) && proto.sass.embedded_protocol.ProtocolError.toObject(includeInstance, f),
            compileResponse: (f = msg.getCompileResponse()) && proto.sass.embedded_protocol.OutboundMessage.CompileResponse.toObject(includeInstance, f),
            logEvent: (f = msg.getLogEvent()) && proto.sass.embedded_protocol.OutboundMessage.LogEvent.toObject(includeInstance, f),
            canonicalizeRequest: (f = msg.getCanonicalizeRequest()) && proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest.toObject(includeInstance, f),
            importRequest: (f = msg.getImportRequest()) && proto.sass.embedded_protocol.OutboundMessage.ImportRequest.toObject(includeInstance, f),
            fileImportRequest: (f = msg.getFileImportRequest()) && proto.sass.embedded_protocol.OutboundMessage.FileImportRequest.toObject(includeInstance, f),
            functionCallRequest: (f = msg.getFunctionCallRequest()) && proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.toObject(includeInstance, f),
            versionResponse: (f = msg.getVersionResponse()) && proto.sass.embedded_protocol.OutboundMessage.VersionResponse.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.OutboundMessage}
 */
proto.sass.embedded_protocol.OutboundMessage.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.OutboundMessage;
    return proto.sass.embedded_protocol.OutboundMessage.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.OutboundMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.OutboundMessage}
 */
proto.sass.embedded_protocol.OutboundMessage.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.sass.embedded_protocol.ProtocolError;
                reader.readMessage(value, proto.sass.embedded_protocol.ProtocolError.deserializeBinaryFromReader);
                msg.setError(value);
                break;
            case 2:
                var value = new proto.sass.embedded_protocol.OutboundMessage.CompileResponse;
                reader.readMessage(value, proto.sass.embedded_protocol.OutboundMessage.CompileResponse.deserializeBinaryFromReader);
                msg.setCompileResponse(value);
                break;
            case 3:
                var value = new proto.sass.embedded_protocol.OutboundMessage.LogEvent;
                reader.readMessage(value, proto.sass.embedded_protocol.OutboundMessage.LogEvent.deserializeBinaryFromReader);
                msg.setLogEvent(value);
                break;
            case 4:
                var value = new proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest;
                reader.readMessage(value, proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest.deserializeBinaryFromReader);
                msg.setCanonicalizeRequest(value);
                break;
            case 5:
                var value = new proto.sass.embedded_protocol.OutboundMessage.ImportRequest;
                reader.readMessage(value, proto.sass.embedded_protocol.OutboundMessage.ImportRequest.deserializeBinaryFromReader);
                msg.setImportRequest(value);
                break;
            case 6:
                var value = new proto.sass.embedded_protocol.OutboundMessage.FileImportRequest;
                reader.readMessage(value, proto.sass.embedded_protocol.OutboundMessage.FileImportRequest.deserializeBinaryFromReader);
                msg.setFileImportRequest(value);
                break;
            case 7:
                var value = new proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest;
                reader.readMessage(value, proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.deserializeBinaryFromReader);
                msg.setFunctionCallRequest(value);
                break;
            case 8:
                var value = new proto.sass.embedded_protocol.OutboundMessage.VersionResponse;
                reader.readMessage(value, proto.sass.embedded_protocol.OutboundMessage.VersionResponse.deserializeBinaryFromReader);
                msg.setVersionResponse(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.OutboundMessage.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.OutboundMessage.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.OutboundMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.OutboundMessage.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getError();
    if (f != null) {
        writer.writeMessage(1, f, proto.sass.embedded_protocol.ProtocolError.serializeBinaryToWriter);
    }
    f = message.getCompileResponse();
    if (f != null) {
        writer.writeMessage(2, f, proto.sass.embedded_protocol.OutboundMessage.CompileResponse.serializeBinaryToWriter);
    }
    f = message.getLogEvent();
    if (f != null) {
        writer.writeMessage(3, f, proto.sass.embedded_protocol.OutboundMessage.LogEvent.serializeBinaryToWriter);
    }
    f = message.getCanonicalizeRequest();
    if (f != null) {
        writer.writeMessage(4, f, proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest.serializeBinaryToWriter);
    }
    f = message.getImportRequest();
    if (f != null) {
        writer.writeMessage(5, f, proto.sass.embedded_protocol.OutboundMessage.ImportRequest.serializeBinaryToWriter);
    }
    f = message.getFileImportRequest();
    if (f != null) {
        writer.writeMessage(6, f, proto.sass.embedded_protocol.OutboundMessage.FileImportRequest.serializeBinaryToWriter);
    }
    f = message.getFunctionCallRequest();
    if (f != null) {
        writer.writeMessage(7, f, proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.serializeBinaryToWriter);
    }
    f = message.getVersionResponse();
    if (f != null) {
        writer.writeMessage(8, f, proto.sass.embedded_protocol.OutboundMessage.VersionResponse.serializeBinaryToWriter);
    }
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.OutboundMessage.VersionResponse.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.OutboundMessage.VersionResponse.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.OutboundMessage.VersionResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.OutboundMessage.VersionResponse.toObject = function (includeInstance, msg) {
        var f, obj = {
            id: jspb.Message.getFieldWithDefault(msg, 5, 0),
            protocolVersion: jspb.Message.getFieldWithDefault(msg, 1, ""),
            compilerVersion: jspb.Message.getFieldWithDefault(msg, 2, ""),
            implementationVersion: jspb.Message.getFieldWithDefault(msg, 3, ""),
            implementationName: jspb.Message.getFieldWithDefault(msg, 4, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.OutboundMessage.VersionResponse}
 */
proto.sass.embedded_protocol.OutboundMessage.VersionResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.OutboundMessage.VersionResponse;
    return proto.sass.embedded_protocol.OutboundMessage.VersionResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.OutboundMessage.VersionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.OutboundMessage.VersionResponse}
 */
proto.sass.embedded_protocol.OutboundMessage.VersionResponse.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 5:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setId(value);
                break;
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setProtocolVersion(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setCompilerVersion(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setImplementationVersion(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setImplementationName(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.OutboundMessage.VersionResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.OutboundMessage.VersionResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.OutboundMessage.VersionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.OutboundMessage.VersionResponse.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getId();
    if (f !== 0) {
        writer.writeUint32(5, f);
    }
    f = message.getProtocolVersion();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getCompilerVersion();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getImplementationVersion();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
    f = message.getImplementationName();
    if (f.length > 0) {
        writer.writeString(4, f);
    }
};
/**
 * optional uint32 id = 5;
 * @return {number}
 */
proto.sass.embedded_protocol.OutboundMessage.VersionResponse.prototype.getId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.VersionResponse} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.VersionResponse.prototype.setId = function (value) {
    return jspb.Message.setProto3IntField(this, 5, value);
};
/**
 * optional string protocol_version = 1;
 * @return {string}
 */
proto.sass.embedded_protocol.OutboundMessage.VersionResponse.prototype.getProtocolVersion = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.VersionResponse} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.VersionResponse.prototype.setProtocolVersion = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string compiler_version = 2;
 * @return {string}
 */
proto.sass.embedded_protocol.OutboundMessage.VersionResponse.prototype.getCompilerVersion = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.VersionResponse} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.VersionResponse.prototype.setCompilerVersion = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * optional string implementation_version = 3;
 * @return {string}
 */
proto.sass.embedded_protocol.OutboundMessage.VersionResponse.prototype.getImplementationVersion = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.VersionResponse} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.VersionResponse.prototype.setImplementationVersion = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};
/**
 * optional string implementation_name = 4;
 * @return {string}
 */
proto.sass.embedded_protocol.OutboundMessage.VersionResponse.prototype.getImplementationName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.VersionResponse} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.VersionResponse.prototype.setImplementationName = function (value) {
    return jspb.Message.setProto3StringField(this, 4, value);
};
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.oneofGroups_ = [[2, 3]];
/**
 * @enum {number}
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.ResultCase = {
    RESULT_NOT_SET: 0,
    SUCCESS: 2,
    FAILURE: 3
};
/**
 * @return {proto.sass.embedded_protocol.OutboundMessage.CompileResponse.ResultCase}
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.prototype.getResultCase = function () {
    return /** @type {proto.sass.embedded_protocol.OutboundMessage.CompileResponse.ResultCase} */ (jspb.Message.computeOneofCase(this, proto.sass.embedded_protocol.OutboundMessage.CompileResponse.oneofGroups_[0]));
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.OutboundMessage.CompileResponse.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.OutboundMessage.CompileResponse.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.OutboundMessage.CompileResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.OutboundMessage.CompileResponse.toObject = function (includeInstance, msg) {
        var f, obj = {
            id: jspb.Message.getFieldWithDefault(msg, 1, 0),
            success: (f = msg.getSuccess()) && proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess.toObject(includeInstance, f),
            failure: (f = msg.getFailure()) && proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.OutboundMessage.CompileResponse}
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.OutboundMessage.CompileResponse;
    return proto.sass.embedded_protocol.OutboundMessage.CompileResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.OutboundMessage.CompileResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.OutboundMessage.CompileResponse}
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setId(value);
                break;
            case 2:
                var value = new proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess;
                reader.readMessage(value, proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess.deserializeBinaryFromReader);
                msg.setSuccess(value);
                break;
            case 3:
                var value = new proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure;
                reader.readMessage(value, proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure.deserializeBinaryFromReader);
                msg.setFailure(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.OutboundMessage.CompileResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.OutboundMessage.CompileResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getId();
    if (f !== 0) {
        writer.writeUint32(1, f);
    }
    f = message.getSuccess();
    if (f != null) {
        writer.writeMessage(2, f, proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess.serializeBinaryToWriter);
    }
    f = message.getFailure();
    if (f != null) {
        writer.writeMessage(3, f, proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure.serializeBinaryToWriter);
    }
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess.repeatedFields_ = [3];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess.toObject = function (includeInstance, msg) {
        var f, obj = {
            css: jspb.Message.getFieldWithDefault(msg, 1, ""),
            sourceMap: jspb.Message.getFieldWithDefault(msg, 2, ""),
            loadedUrlsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess}
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess;
    return proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess}
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setCss(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setSourceMap(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.addLoadedUrls(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getCss();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getSourceMap();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getLoadedUrlsList();
    if (f.length > 0) {
        writer.writeRepeatedString(3, f);
    }
};
/**
 * optional string css = 1;
 * @return {string}
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess.prototype.getCss = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess.prototype.setCss = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string source_map = 2;
 * @return {string}
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess.prototype.getSourceMap = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess.prototype.setSourceMap = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * repeated string loaded_urls = 3;
 * @return {!Array<string>}
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess.prototype.getLoadedUrlsList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess.prototype.setLoadedUrlsList = function (value) {
    return jspb.Message.setField(this, 3, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess.prototype.addLoadedUrls = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess.prototype.clearLoadedUrlsList = function () {
    return this.setLoadedUrlsList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure.toObject = function (includeInstance, msg) {
        var f, obj = {
            message: jspb.Message.getFieldWithDefault(msg, 1, ""),
            span: (f = msg.getSpan()) && proto.sass.embedded_protocol.SourceSpan.toObject(includeInstance, f),
            stackTrace: jspb.Message.getFieldWithDefault(msg, 3, ""),
            formatted: jspb.Message.getFieldWithDefault(msg, 4, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure}
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure;
    return proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure}
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setMessage(value);
                break;
            case 2:
                var value = new proto.sass.embedded_protocol.SourceSpan;
                reader.readMessage(value, proto.sass.embedded_protocol.SourceSpan.deserializeBinaryFromReader);
                msg.setSpan(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setStackTrace(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setFormatted(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMessage();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getSpan();
    if (f != null) {
        writer.writeMessage(2, f, proto.sass.embedded_protocol.SourceSpan.serializeBinaryToWriter);
    }
    f = message.getStackTrace();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
    f = message.getFormatted();
    if (f.length > 0) {
        writer.writeString(4, f);
    }
};
/**
 * optional string message = 1;
 * @return {string}
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure.prototype.getMessage = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure.prototype.setMessage = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional SourceSpan span = 2;
 * @return {?proto.sass.embedded_protocol.SourceSpan}
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure.prototype.getSpan = function () {
    return /** @type{?proto.sass.embedded_protocol.SourceSpan} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.SourceSpan, 2));
};
/**
 * @param {?proto.sass.embedded_protocol.SourceSpan|undefined} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure} returns this
*/
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure.prototype.setSpan = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure.prototype.clearSpan = function () {
    return this.setSpan(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure.prototype.hasSpan = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string stack_trace = 3;
 * @return {string}
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure.prototype.getStackTrace = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure.prototype.setStackTrace = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};
/**
 * optional string formatted = 4;
 * @return {string}
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure.prototype.getFormatted = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure.prototype.setFormatted = function (value) {
    return jspb.Message.setProto3StringField(this, 4, value);
};
/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.prototype.getId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.CompileResponse} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.prototype.setId = function (value) {
    return jspb.Message.setProto3IntField(this, 1, value);
};
/**
 * optional CompileSuccess success = 2;
 * @return {?proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess}
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.prototype.getSuccess = function () {
    return /** @type{?proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess, 2));
};
/**
 * @param {?proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileSuccess|undefined} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.CompileResponse} returns this
*/
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.prototype.setSuccess = function (value) {
    return jspb.Message.setOneofWrapperField(this, 2, proto.sass.embedded_protocol.OutboundMessage.CompileResponse.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.OutboundMessage.CompileResponse} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.prototype.clearSuccess = function () {
    return this.setSuccess(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.prototype.hasSuccess = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional CompileFailure failure = 3;
 * @return {?proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure}
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.prototype.getFailure = function () {
    return /** @type{?proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure, 3));
};
/**
 * @param {?proto.sass.embedded_protocol.OutboundMessage.CompileResponse.CompileFailure|undefined} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.CompileResponse} returns this
*/
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.prototype.setFailure = function (value) {
    return jspb.Message.setOneofWrapperField(this, 3, proto.sass.embedded_protocol.OutboundMessage.CompileResponse.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.OutboundMessage.CompileResponse} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.prototype.clearFailure = function () {
    return this.setFailure(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.OutboundMessage.CompileResponse.prototype.hasFailure = function () {
    return jspb.Message.getField(this, 3) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.OutboundMessage.LogEvent.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.OutboundMessage.LogEvent.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.OutboundMessage.LogEvent} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.OutboundMessage.LogEvent.toObject = function (includeInstance, msg) {
        var f, obj = {
            compilationId: jspb.Message.getFieldWithDefault(msg, 1, 0),
            type: jspb.Message.getFieldWithDefault(msg, 2, 0),
            message: jspb.Message.getFieldWithDefault(msg, 3, ""),
            span: (f = msg.getSpan()) && proto.sass.embedded_protocol.SourceSpan.toObject(includeInstance, f),
            stackTrace: jspb.Message.getFieldWithDefault(msg, 5, ""),
            formatted: jspb.Message.getFieldWithDefault(msg, 6, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.OutboundMessage.LogEvent}
 */
proto.sass.embedded_protocol.OutboundMessage.LogEvent.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.OutboundMessage.LogEvent;
    return proto.sass.embedded_protocol.OutboundMessage.LogEvent.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.OutboundMessage.LogEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.OutboundMessage.LogEvent}
 */
proto.sass.embedded_protocol.OutboundMessage.LogEvent.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setCompilationId(value);
                break;
            case 2:
                var value = /** @type {!proto.sass.embedded_protocol.LogEventType} */ (reader.readEnum());
                msg.setType(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setMessage(value);
                break;
            case 4:
                var value = new proto.sass.embedded_protocol.SourceSpan;
                reader.readMessage(value, proto.sass.embedded_protocol.SourceSpan.deserializeBinaryFromReader);
                msg.setSpan(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setStackTrace(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.setFormatted(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.OutboundMessage.LogEvent.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.OutboundMessage.LogEvent.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.OutboundMessage.LogEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.OutboundMessage.LogEvent.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getCompilationId();
    if (f !== 0) {
        writer.writeUint32(1, f);
    }
    f = message.getType();
    if (f !== 0.0) {
        writer.writeEnum(2, f);
    }
    f = message.getMessage();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
    f = message.getSpan();
    if (f != null) {
        writer.writeMessage(4, f, proto.sass.embedded_protocol.SourceSpan.serializeBinaryToWriter);
    }
    f = message.getStackTrace();
    if (f.length > 0) {
        writer.writeString(5, f);
    }
    f = message.getFormatted();
    if (f.length > 0) {
        writer.writeString(6, f);
    }
};
/**
 * optional uint32 compilation_id = 1;
 * @return {number}
 */
proto.sass.embedded_protocol.OutboundMessage.LogEvent.prototype.getCompilationId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.LogEvent} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.LogEvent.prototype.setCompilationId = function (value) {
    return jspb.Message.setProto3IntField(this, 1, value);
};
/**
 * optional LogEventType type = 2;
 * @return {!proto.sass.embedded_protocol.LogEventType}
 */
proto.sass.embedded_protocol.OutboundMessage.LogEvent.prototype.getType = function () {
    return /** @type {!proto.sass.embedded_protocol.LogEventType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};
/**
 * @param {!proto.sass.embedded_protocol.LogEventType} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.LogEvent} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.LogEvent.prototype.setType = function (value) {
    return jspb.Message.setProto3EnumField(this, 2, value);
};
/**
 * optional string message = 3;
 * @return {string}
 */
proto.sass.embedded_protocol.OutboundMessage.LogEvent.prototype.getMessage = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.LogEvent} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.LogEvent.prototype.setMessage = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};
/**
 * optional SourceSpan span = 4;
 * @return {?proto.sass.embedded_protocol.SourceSpan}
 */
proto.sass.embedded_protocol.OutboundMessage.LogEvent.prototype.getSpan = function () {
    return /** @type{?proto.sass.embedded_protocol.SourceSpan} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.SourceSpan, 4));
};
/**
 * @param {?proto.sass.embedded_protocol.SourceSpan|undefined} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.LogEvent} returns this
*/
proto.sass.embedded_protocol.OutboundMessage.LogEvent.prototype.setSpan = function (value) {
    return jspb.Message.setWrapperField(this, 4, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.OutboundMessage.LogEvent} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.LogEvent.prototype.clearSpan = function () {
    return this.setSpan(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.OutboundMessage.LogEvent.prototype.hasSpan = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional string stack_trace = 5;
 * @return {string}
 */
proto.sass.embedded_protocol.OutboundMessage.LogEvent.prototype.getStackTrace = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.LogEvent} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.LogEvent.prototype.setStackTrace = function (value) {
    return jspb.Message.setProto3StringField(this, 5, value);
};
/**
 * optional string formatted = 6;
 * @return {string}
 */
proto.sass.embedded_protocol.OutboundMessage.LogEvent.prototype.getFormatted = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.LogEvent} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.LogEvent.prototype.setFormatted = function (value) {
    return jspb.Message.setProto3StringField(this, 6, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest.toObject = function (includeInstance, msg) {
        var f, obj = {
            id: jspb.Message.getFieldWithDefault(msg, 1, 0),
            compilationId: jspb.Message.getFieldWithDefault(msg, 2, 0),
            importerId: jspb.Message.getFieldWithDefault(msg, 3, 0),
            url: jspb.Message.getFieldWithDefault(msg, 4, ""),
            fromImport: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest}
 */
proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest;
    return proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest}
 */
proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setId(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setCompilationId(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setImporterId(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setUrl(value);
                break;
            case 5:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setFromImport(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getId();
    if (f !== 0) {
        writer.writeUint32(1, f);
    }
    f = message.getCompilationId();
    if (f !== 0) {
        writer.writeUint32(2, f);
    }
    f = message.getImporterId();
    if (f !== 0) {
        writer.writeUint32(3, f);
    }
    f = message.getUrl();
    if (f.length > 0) {
        writer.writeString(4, f);
    }
    f = message.getFromImport();
    if (f) {
        writer.writeBool(5, f);
    }
};
/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest.prototype.getId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest.prototype.setId = function (value) {
    return jspb.Message.setProto3IntField(this, 1, value);
};
/**
 * optional uint32 compilation_id = 2;
 * @return {number}
 */
proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest.prototype.getCompilationId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest.prototype.setCompilationId = function (value) {
    return jspb.Message.setProto3IntField(this, 2, value);
};
/**
 * optional uint32 importer_id = 3;
 * @return {number}
 */
proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest.prototype.getImporterId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest.prototype.setImporterId = function (value) {
    return jspb.Message.setProto3IntField(this, 3, value);
};
/**
 * optional string url = 4;
 * @return {string}
 */
proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest.prototype.getUrl = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest.prototype.setUrl = function (value) {
    return jspb.Message.setProto3StringField(this, 4, value);
};
/**
 * optional bool from_import = 5;
 * @return {boolean}
 */
proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest.prototype.getFromImport = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};
/**
 * @param {boolean} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest.prototype.setFromImport = function (value) {
    return jspb.Message.setProto3BooleanField(this, 5, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.OutboundMessage.ImportRequest.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.OutboundMessage.ImportRequest.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.OutboundMessage.ImportRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.OutboundMessage.ImportRequest.toObject = function (includeInstance, msg) {
        var f, obj = {
            id: jspb.Message.getFieldWithDefault(msg, 1, 0),
            compilationId: jspb.Message.getFieldWithDefault(msg, 2, 0),
            importerId: jspb.Message.getFieldWithDefault(msg, 3, 0),
            url: jspb.Message.getFieldWithDefault(msg, 4, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.OutboundMessage.ImportRequest}
 */
proto.sass.embedded_protocol.OutboundMessage.ImportRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.OutboundMessage.ImportRequest;
    return proto.sass.embedded_protocol.OutboundMessage.ImportRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.OutboundMessage.ImportRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.OutboundMessage.ImportRequest}
 */
proto.sass.embedded_protocol.OutboundMessage.ImportRequest.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setId(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setCompilationId(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setImporterId(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setUrl(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.OutboundMessage.ImportRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.OutboundMessage.ImportRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.OutboundMessage.ImportRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.OutboundMessage.ImportRequest.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getId();
    if (f !== 0) {
        writer.writeUint32(1, f);
    }
    f = message.getCompilationId();
    if (f !== 0) {
        writer.writeUint32(2, f);
    }
    f = message.getImporterId();
    if (f !== 0) {
        writer.writeUint32(3, f);
    }
    f = message.getUrl();
    if (f.length > 0) {
        writer.writeString(4, f);
    }
};
/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.sass.embedded_protocol.OutboundMessage.ImportRequest.prototype.getId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.ImportRequest} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.ImportRequest.prototype.setId = function (value) {
    return jspb.Message.setProto3IntField(this, 1, value);
};
/**
 * optional uint32 compilation_id = 2;
 * @return {number}
 */
proto.sass.embedded_protocol.OutboundMessage.ImportRequest.prototype.getCompilationId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.ImportRequest} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.ImportRequest.prototype.setCompilationId = function (value) {
    return jspb.Message.setProto3IntField(this, 2, value);
};
/**
 * optional uint32 importer_id = 3;
 * @return {number}
 */
proto.sass.embedded_protocol.OutboundMessage.ImportRequest.prototype.getImporterId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.ImportRequest} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.ImportRequest.prototype.setImporterId = function (value) {
    return jspb.Message.setProto3IntField(this, 3, value);
};
/**
 * optional string url = 4;
 * @return {string}
 */
proto.sass.embedded_protocol.OutboundMessage.ImportRequest.prototype.getUrl = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.ImportRequest} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.ImportRequest.prototype.setUrl = function (value) {
    return jspb.Message.setProto3StringField(this, 4, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.OutboundMessage.FileImportRequest.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.OutboundMessage.FileImportRequest.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.OutboundMessage.FileImportRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.OutboundMessage.FileImportRequest.toObject = function (includeInstance, msg) {
        var f, obj = {
            id: jspb.Message.getFieldWithDefault(msg, 1, 0),
            compilationId: jspb.Message.getFieldWithDefault(msg, 2, 0),
            importerId: jspb.Message.getFieldWithDefault(msg, 3, 0),
            url: jspb.Message.getFieldWithDefault(msg, 4, ""),
            fromImport: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.OutboundMessage.FileImportRequest}
 */
proto.sass.embedded_protocol.OutboundMessage.FileImportRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.OutboundMessage.FileImportRequest;
    return proto.sass.embedded_protocol.OutboundMessage.FileImportRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.OutboundMessage.FileImportRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.OutboundMessage.FileImportRequest}
 */
proto.sass.embedded_protocol.OutboundMessage.FileImportRequest.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setId(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setCompilationId(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setImporterId(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setUrl(value);
                break;
            case 5:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setFromImport(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.OutboundMessage.FileImportRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.OutboundMessage.FileImportRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.OutboundMessage.FileImportRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.OutboundMessage.FileImportRequest.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getId();
    if (f !== 0) {
        writer.writeUint32(1, f);
    }
    f = message.getCompilationId();
    if (f !== 0) {
        writer.writeUint32(2, f);
    }
    f = message.getImporterId();
    if (f !== 0) {
        writer.writeUint32(3, f);
    }
    f = message.getUrl();
    if (f.length > 0) {
        writer.writeString(4, f);
    }
    f = message.getFromImport();
    if (f) {
        writer.writeBool(5, f);
    }
};
/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.sass.embedded_protocol.OutboundMessage.FileImportRequest.prototype.getId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.FileImportRequest} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.FileImportRequest.prototype.setId = function (value) {
    return jspb.Message.setProto3IntField(this, 1, value);
};
/**
 * optional uint32 compilation_id = 2;
 * @return {number}
 */
proto.sass.embedded_protocol.OutboundMessage.FileImportRequest.prototype.getCompilationId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.FileImportRequest} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.FileImportRequest.prototype.setCompilationId = function (value) {
    return jspb.Message.setProto3IntField(this, 2, value);
};
/**
 * optional uint32 importer_id = 3;
 * @return {number}
 */
proto.sass.embedded_protocol.OutboundMessage.FileImportRequest.prototype.getImporterId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.FileImportRequest} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.FileImportRequest.prototype.setImporterId = function (value) {
    return jspb.Message.setProto3IntField(this, 3, value);
};
/**
 * optional string url = 4;
 * @return {string}
 */
proto.sass.embedded_protocol.OutboundMessage.FileImportRequest.prototype.getUrl = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.FileImportRequest} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.FileImportRequest.prototype.setUrl = function (value) {
    return jspb.Message.setProto3StringField(this, 4, value);
};
/**
 * optional bool from_import = 5;
 * @return {boolean}
 */
proto.sass.embedded_protocol.OutboundMessage.FileImportRequest.prototype.getFromImport = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};
/**
 * @param {boolean} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.FileImportRequest} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.FileImportRequest.prototype.setFromImport = function (value) {
    return jspb.Message.setProto3BooleanField(this, 5, value);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.repeatedFields_ = [5];
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.oneofGroups_ = [[3, 4]];
/**
 * @enum {number}
 */
proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.IdentifierCase = {
    IDENTIFIER_NOT_SET: 0,
    NAME: 3,
    FUNCTION_ID: 4
};
/**
 * @return {proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.IdentifierCase}
 */
proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.prototype.getIdentifierCase = function () {
    return /** @type {proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.IdentifierCase} */ (jspb.Message.computeOneofCase(this, proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.oneofGroups_[0]));
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.toObject = function (includeInstance, msg) {
        var f, obj = {
            id: jspb.Message.getFieldWithDefault(msg, 1, 0),
            compilationId: jspb.Message.getFieldWithDefault(msg, 2, 0),
            name: jspb.Message.getFieldWithDefault(msg, 3, ""),
            functionId: jspb.Message.getFieldWithDefault(msg, 4, 0),
            argumentsList: jspb.Message.toObjectList(msg.getArgumentsList(), proto.sass.embedded_protocol.Value.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest}
 */
proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest;
    return proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest}
 */
proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setId(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setCompilationId(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setFunctionId(value);
                break;
            case 5:
                var value = new proto.sass.embedded_protocol.Value;
                reader.readMessage(value, proto.sass.embedded_protocol.Value.deserializeBinaryFromReader);
                msg.addArguments(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getId();
    if (f !== 0) {
        writer.writeUint32(1, f);
    }
    f = message.getCompilationId();
    if (f !== 0) {
        writer.writeUint32(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeUint32(4, f);
    }
    f = message.getArgumentsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(5, f, proto.sass.embedded_protocol.Value.serializeBinaryToWriter);
    }
};
/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.prototype.getId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.prototype.setId = function (value) {
    return jspb.Message.setProto3IntField(this, 1, value);
};
/**
 * optional uint32 compilation_id = 2;
 * @return {number}
 */
proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.prototype.getCompilationId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.prototype.setCompilationId = function (value) {
    return jspb.Message.setProto3IntField(this, 2, value);
};
/**
 * optional string name = 3;
 * @return {string}
 */
proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.prototype.setName = function (value) {
    return jspb.Message.setOneofField(this, 3, proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.oneofGroups_[0], value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.prototype.clearName = function () {
    return jspb.Message.setOneofField(this, 3, proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.oneofGroups_[0], undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.prototype.hasName = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional uint32 function_id = 4;
 * @return {number}
 */
proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.prototype.getFunctionId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.prototype.setFunctionId = function (value) {
    return jspb.Message.setOneofField(this, 4, proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.oneofGroups_[0], value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.prototype.clearFunctionId = function () {
    return jspb.Message.setOneofField(this, 4, proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.oneofGroups_[0], undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.prototype.hasFunctionId = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * repeated Value arguments = 5;
 * @return {!Array<!proto.sass.embedded_protocol.Value>}
 */
proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.prototype.getArgumentsList = function () {
    return /** @type{!Array<!proto.sass.embedded_protocol.Value>} */ (jspb.Message.getRepeatedWrapperField(this, proto.sass.embedded_protocol.Value, 5));
};
/**
 * @param {!Array<!proto.sass.embedded_protocol.Value>} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest} returns this
*/
proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.prototype.setArgumentsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 5, value);
};
/**
 * @param {!proto.sass.embedded_protocol.Value=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sass.embedded_protocol.Value}
 */
proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.prototype.addArguments = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.sass.embedded_protocol.Value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest.prototype.clearArgumentsList = function () {
    return this.setArgumentsList([]);
};
/**
 * optional ProtocolError error = 1;
 * @return {?proto.sass.embedded_protocol.ProtocolError}
 */
proto.sass.embedded_protocol.OutboundMessage.prototype.getError = function () {
    return /** @type{?proto.sass.embedded_protocol.ProtocolError} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.ProtocolError, 1));
};
/**
 * @param {?proto.sass.embedded_protocol.ProtocolError|undefined} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage} returns this
*/
proto.sass.embedded_protocol.OutboundMessage.prototype.setError = function (value) {
    return jspb.Message.setOneofWrapperField(this, 1, proto.sass.embedded_protocol.OutboundMessage.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.OutboundMessage} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.prototype.clearError = function () {
    return this.setError(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.OutboundMessage.prototype.hasError = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional CompileResponse compile_response = 2;
 * @return {?proto.sass.embedded_protocol.OutboundMessage.CompileResponse}
 */
proto.sass.embedded_protocol.OutboundMessage.prototype.getCompileResponse = function () {
    return /** @type{?proto.sass.embedded_protocol.OutboundMessage.CompileResponse} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.OutboundMessage.CompileResponse, 2));
};
/**
 * @param {?proto.sass.embedded_protocol.OutboundMessage.CompileResponse|undefined} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage} returns this
*/
proto.sass.embedded_protocol.OutboundMessage.prototype.setCompileResponse = function (value) {
    return jspb.Message.setOneofWrapperField(this, 2, proto.sass.embedded_protocol.OutboundMessage.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.OutboundMessage} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.prototype.clearCompileResponse = function () {
    return this.setCompileResponse(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.OutboundMessage.prototype.hasCompileResponse = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional LogEvent log_event = 3;
 * @return {?proto.sass.embedded_protocol.OutboundMessage.LogEvent}
 */
proto.sass.embedded_protocol.OutboundMessage.prototype.getLogEvent = function () {
    return /** @type{?proto.sass.embedded_protocol.OutboundMessage.LogEvent} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.OutboundMessage.LogEvent, 3));
};
/**
 * @param {?proto.sass.embedded_protocol.OutboundMessage.LogEvent|undefined} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage} returns this
*/
proto.sass.embedded_protocol.OutboundMessage.prototype.setLogEvent = function (value) {
    return jspb.Message.setOneofWrapperField(this, 3, proto.sass.embedded_protocol.OutboundMessage.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.OutboundMessage} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.prototype.clearLogEvent = function () {
    return this.setLogEvent(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.OutboundMessage.prototype.hasLogEvent = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional CanonicalizeRequest canonicalize_request = 4;
 * @return {?proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest}
 */
proto.sass.embedded_protocol.OutboundMessage.prototype.getCanonicalizeRequest = function () {
    return /** @type{?proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest, 4));
};
/**
 * @param {?proto.sass.embedded_protocol.OutboundMessage.CanonicalizeRequest|undefined} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage} returns this
*/
proto.sass.embedded_protocol.OutboundMessage.prototype.setCanonicalizeRequest = function (value) {
    return jspb.Message.setOneofWrapperField(this, 4, proto.sass.embedded_protocol.OutboundMessage.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.OutboundMessage} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.prototype.clearCanonicalizeRequest = function () {
    return this.setCanonicalizeRequest(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.OutboundMessage.prototype.hasCanonicalizeRequest = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional ImportRequest import_request = 5;
 * @return {?proto.sass.embedded_protocol.OutboundMessage.ImportRequest}
 */
proto.sass.embedded_protocol.OutboundMessage.prototype.getImportRequest = function () {
    return /** @type{?proto.sass.embedded_protocol.OutboundMessage.ImportRequest} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.OutboundMessage.ImportRequest, 5));
};
/**
 * @param {?proto.sass.embedded_protocol.OutboundMessage.ImportRequest|undefined} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage} returns this
*/
proto.sass.embedded_protocol.OutboundMessage.prototype.setImportRequest = function (value) {
    return jspb.Message.setOneofWrapperField(this, 5, proto.sass.embedded_protocol.OutboundMessage.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.OutboundMessage} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.prototype.clearImportRequest = function () {
    return this.setImportRequest(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.OutboundMessage.prototype.hasImportRequest = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional FileImportRequest file_import_request = 6;
 * @return {?proto.sass.embedded_protocol.OutboundMessage.FileImportRequest}
 */
proto.sass.embedded_protocol.OutboundMessage.prototype.getFileImportRequest = function () {
    return /** @type{?proto.sass.embedded_protocol.OutboundMessage.FileImportRequest} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.OutboundMessage.FileImportRequest, 6));
};
/**
 * @param {?proto.sass.embedded_protocol.OutboundMessage.FileImportRequest|undefined} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage} returns this
*/
proto.sass.embedded_protocol.OutboundMessage.prototype.setFileImportRequest = function (value) {
    return jspb.Message.setOneofWrapperField(this, 6, proto.sass.embedded_protocol.OutboundMessage.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.OutboundMessage} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.prototype.clearFileImportRequest = function () {
    return this.setFileImportRequest(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.OutboundMessage.prototype.hasFileImportRequest = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * optional FunctionCallRequest function_call_request = 7;
 * @return {?proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest}
 */
proto.sass.embedded_protocol.OutboundMessage.prototype.getFunctionCallRequest = function () {
    return /** @type{?proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest, 7));
};
/**
 * @param {?proto.sass.embedded_protocol.OutboundMessage.FunctionCallRequest|undefined} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage} returns this
*/
proto.sass.embedded_protocol.OutboundMessage.prototype.setFunctionCallRequest = function (value) {
    return jspb.Message.setOneofWrapperField(this, 7, proto.sass.embedded_protocol.OutboundMessage.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.OutboundMessage} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.prototype.clearFunctionCallRequest = function () {
    return this.setFunctionCallRequest(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.OutboundMessage.prototype.hasFunctionCallRequest = function () {
    return jspb.Message.getField(this, 7) != null;
};
/**
 * optional VersionResponse version_response = 8;
 * @return {?proto.sass.embedded_protocol.OutboundMessage.VersionResponse}
 */
proto.sass.embedded_protocol.OutboundMessage.prototype.getVersionResponse = function () {
    return /** @type{?proto.sass.embedded_protocol.OutboundMessage.VersionResponse} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.OutboundMessage.VersionResponse, 8));
};
/**
 * @param {?proto.sass.embedded_protocol.OutboundMessage.VersionResponse|undefined} value
 * @return {!proto.sass.embedded_protocol.OutboundMessage} returns this
*/
proto.sass.embedded_protocol.OutboundMessage.prototype.setVersionResponse = function (value) {
    return jspb.Message.setOneofWrapperField(this, 8, proto.sass.embedded_protocol.OutboundMessage.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.OutboundMessage} returns this
 */
proto.sass.embedded_protocol.OutboundMessage.prototype.clearVersionResponse = function () {
    return this.setVersionResponse(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.OutboundMessage.prototype.hasVersionResponse = function () {
    return jspb.Message.getField(this, 8) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.ProtocolError.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.ProtocolError.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.ProtocolError} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.ProtocolError.toObject = function (includeInstance, msg) {
        var f, obj = {
            type: jspb.Message.getFieldWithDefault(msg, 1, 0),
            id: jspb.Message.getFieldWithDefault(msg, 2, 0),
            message: jspb.Message.getFieldWithDefault(msg, 3, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.ProtocolError}
 */
proto.sass.embedded_protocol.ProtocolError.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.ProtocolError;
    return proto.sass.embedded_protocol.ProtocolError.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.ProtocolError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.ProtocolError}
 */
proto.sass.embedded_protocol.ProtocolError.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.sass.embedded_protocol.ProtocolErrorType} */ (reader.readEnum());
                msg.setType(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setId(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setMessage(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.ProtocolError.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.ProtocolError.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.ProtocolError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.ProtocolError.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getType();
    if (f !== 0.0) {
        writer.writeEnum(1, f);
    }
    f = message.getId();
    if (f !== 0) {
        writer.writeUint32(2, f);
    }
    f = message.getMessage();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
};
/**
 * optional ProtocolErrorType type = 1;
 * @return {!proto.sass.embedded_protocol.ProtocolErrorType}
 */
proto.sass.embedded_protocol.ProtocolError.prototype.getType = function () {
    return /** @type {!proto.sass.embedded_protocol.ProtocolErrorType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {!proto.sass.embedded_protocol.ProtocolErrorType} value
 * @return {!proto.sass.embedded_protocol.ProtocolError} returns this
 */
proto.sass.embedded_protocol.ProtocolError.prototype.setType = function (value) {
    return jspb.Message.setProto3EnumField(this, 1, value);
};
/**
 * optional uint32 id = 2;
 * @return {number}
 */
proto.sass.embedded_protocol.ProtocolError.prototype.getId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.ProtocolError} returns this
 */
proto.sass.embedded_protocol.ProtocolError.prototype.setId = function (value) {
    return jspb.Message.setProto3IntField(this, 2, value);
};
/**
 * optional string message = 3;
 * @return {string}
 */
proto.sass.embedded_protocol.ProtocolError.prototype.getMessage = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.ProtocolError} returns this
 */
proto.sass.embedded_protocol.ProtocolError.prototype.setMessage = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.SourceSpan.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.SourceSpan.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.SourceSpan} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.SourceSpan.toObject = function (includeInstance, msg) {
        var f, obj = {
            text: jspb.Message.getFieldWithDefault(msg, 1, ""),
            start: (f = msg.getStart()) && proto.sass.embedded_protocol.SourceSpan.SourceLocation.toObject(includeInstance, f),
            end: (f = msg.getEnd()) && proto.sass.embedded_protocol.SourceSpan.SourceLocation.toObject(includeInstance, f),
            url: jspb.Message.getFieldWithDefault(msg, 4, ""),
            context: jspb.Message.getFieldWithDefault(msg, 5, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.SourceSpan}
 */
proto.sass.embedded_protocol.SourceSpan.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.SourceSpan;
    return proto.sass.embedded_protocol.SourceSpan.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.SourceSpan} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.SourceSpan}
 */
proto.sass.embedded_protocol.SourceSpan.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setText(value);
                break;
            case 2:
                var value = new proto.sass.embedded_protocol.SourceSpan.SourceLocation;
                reader.readMessage(value, proto.sass.embedded_protocol.SourceSpan.SourceLocation.deserializeBinaryFromReader);
                msg.setStart(value);
                break;
            case 3:
                var value = new proto.sass.embedded_protocol.SourceSpan.SourceLocation;
                reader.readMessage(value, proto.sass.embedded_protocol.SourceSpan.SourceLocation.deserializeBinaryFromReader);
                msg.setEnd(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setUrl(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setContext(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.SourceSpan.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.SourceSpan.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.SourceSpan} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.SourceSpan.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getText();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getStart();
    if (f != null) {
        writer.writeMessage(2, f, proto.sass.embedded_protocol.SourceSpan.SourceLocation.serializeBinaryToWriter);
    }
    f = message.getEnd();
    if (f != null) {
        writer.writeMessage(3, f, proto.sass.embedded_protocol.SourceSpan.SourceLocation.serializeBinaryToWriter);
    }
    f = message.getUrl();
    if (f.length > 0) {
        writer.writeString(4, f);
    }
    f = message.getContext();
    if (f.length > 0) {
        writer.writeString(5, f);
    }
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.SourceSpan.SourceLocation.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.SourceSpan.SourceLocation.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.SourceSpan.SourceLocation} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.SourceSpan.SourceLocation.toObject = function (includeInstance, msg) {
        var f, obj = {
            offset: jspb.Message.getFieldWithDefault(msg, 1, 0),
            line: jspb.Message.getFieldWithDefault(msg, 2, 0),
            column: jspb.Message.getFieldWithDefault(msg, 3, 0)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.SourceSpan.SourceLocation}
 */
proto.sass.embedded_protocol.SourceSpan.SourceLocation.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.SourceSpan.SourceLocation;
    return proto.sass.embedded_protocol.SourceSpan.SourceLocation.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.SourceSpan.SourceLocation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.SourceSpan.SourceLocation}
 */
proto.sass.embedded_protocol.SourceSpan.SourceLocation.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setOffset(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setLine(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setColumn(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.SourceSpan.SourceLocation.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.SourceSpan.SourceLocation.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.SourceSpan.SourceLocation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.SourceSpan.SourceLocation.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getOffset();
    if (f !== 0) {
        writer.writeUint32(1, f);
    }
    f = message.getLine();
    if (f !== 0) {
        writer.writeUint32(2, f);
    }
    f = message.getColumn();
    if (f !== 0) {
        writer.writeUint32(3, f);
    }
};
/**
 * optional uint32 offset = 1;
 * @return {number}
 */
proto.sass.embedded_protocol.SourceSpan.SourceLocation.prototype.getOffset = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.SourceSpan.SourceLocation} returns this
 */
proto.sass.embedded_protocol.SourceSpan.SourceLocation.prototype.setOffset = function (value) {
    return jspb.Message.setProto3IntField(this, 1, value);
};
/**
 * optional uint32 line = 2;
 * @return {number}
 */
proto.sass.embedded_protocol.SourceSpan.SourceLocation.prototype.getLine = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.SourceSpan.SourceLocation} returns this
 */
proto.sass.embedded_protocol.SourceSpan.SourceLocation.prototype.setLine = function (value) {
    return jspb.Message.setProto3IntField(this, 2, value);
};
/**
 * optional uint32 column = 3;
 * @return {number}
 */
proto.sass.embedded_protocol.SourceSpan.SourceLocation.prototype.getColumn = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.SourceSpan.SourceLocation} returns this
 */
proto.sass.embedded_protocol.SourceSpan.SourceLocation.prototype.setColumn = function (value) {
    return jspb.Message.setProto3IntField(this, 3, value);
};
/**
 * optional string text = 1;
 * @return {string}
 */
proto.sass.embedded_protocol.SourceSpan.prototype.getText = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.SourceSpan} returns this
 */
proto.sass.embedded_protocol.SourceSpan.prototype.setText = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional SourceLocation start = 2;
 * @return {?proto.sass.embedded_protocol.SourceSpan.SourceLocation}
 */
proto.sass.embedded_protocol.SourceSpan.prototype.getStart = function () {
    return /** @type{?proto.sass.embedded_protocol.SourceSpan.SourceLocation} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.SourceSpan.SourceLocation, 2));
};
/**
 * @param {?proto.sass.embedded_protocol.SourceSpan.SourceLocation|undefined} value
 * @return {!proto.sass.embedded_protocol.SourceSpan} returns this
*/
proto.sass.embedded_protocol.SourceSpan.prototype.setStart = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.SourceSpan} returns this
 */
proto.sass.embedded_protocol.SourceSpan.prototype.clearStart = function () {
    return this.setStart(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.SourceSpan.prototype.hasStart = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional SourceLocation end = 3;
 * @return {?proto.sass.embedded_protocol.SourceSpan.SourceLocation}
 */
proto.sass.embedded_protocol.SourceSpan.prototype.getEnd = function () {
    return /** @type{?proto.sass.embedded_protocol.SourceSpan.SourceLocation} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.SourceSpan.SourceLocation, 3));
};
/**
 * @param {?proto.sass.embedded_protocol.SourceSpan.SourceLocation|undefined} value
 * @return {!proto.sass.embedded_protocol.SourceSpan} returns this
*/
proto.sass.embedded_protocol.SourceSpan.prototype.setEnd = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.SourceSpan} returns this
 */
proto.sass.embedded_protocol.SourceSpan.prototype.clearEnd = function () {
    return this.setEnd(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.SourceSpan.prototype.hasEnd = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string url = 4;
 * @return {string}
 */
proto.sass.embedded_protocol.SourceSpan.prototype.getUrl = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.SourceSpan} returns this
 */
proto.sass.embedded_protocol.SourceSpan.prototype.setUrl = function (value) {
    return jspb.Message.setProto3StringField(this, 4, value);
};
/**
 * optional string context = 5;
 * @return {string}
 */
proto.sass.embedded_protocol.SourceSpan.prototype.getContext = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.SourceSpan} returns this
 */
proto.sass.embedded_protocol.SourceSpan.prototype.setContext = function (value) {
    return jspb.Message.setProto3StringField(this, 5, value);
};
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.sass.embedded_protocol.Value.oneofGroups_ = [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]];
/**
 * @enum {number}
 */
proto.sass.embedded_protocol.Value.ValueCase = {
    VALUE_NOT_SET: 0,
    STRING: 1,
    NUMBER: 2,
    RGB_COLOR: 3,
    HSL_COLOR: 4,
    LIST: 5,
    MAP: 6,
    SINGLETON: 7,
    COMPILER_FUNCTION: 8,
    HOST_FUNCTION: 9,
    ARGUMENT_LIST: 10,
    HWB_COLOR: 11,
    CALCULATION: 12
};
/**
 * @return {proto.sass.embedded_protocol.Value.ValueCase}
 */
proto.sass.embedded_protocol.Value.prototype.getValueCase = function () {
    return /** @type {proto.sass.embedded_protocol.Value.ValueCase} */ (jspb.Message.computeOneofCase(this, proto.sass.embedded_protocol.Value.oneofGroups_[0]));
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.Value.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.Value.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.Value} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.Value.toObject = function (includeInstance, msg) {
        var f, obj = {
            string: (f = msg.getString()) && proto.sass.embedded_protocol.Value.String.toObject(includeInstance, f),
            number: (f = msg.getNumber()) && proto.sass.embedded_protocol.Value.Number.toObject(includeInstance, f),
            rgbColor: (f = msg.getRgbColor()) && proto.sass.embedded_protocol.Value.RgbColor.toObject(includeInstance, f),
            hslColor: (f = msg.getHslColor()) && proto.sass.embedded_protocol.Value.HslColor.toObject(includeInstance, f),
            list: (f = msg.getList()) && proto.sass.embedded_protocol.Value.List.toObject(includeInstance, f),
            map: (f = msg.getMap()) && proto.sass.embedded_protocol.Value.Map.toObject(includeInstance, f),
            singleton: jspb.Message.getFieldWithDefault(msg, 7, 0),
            compilerFunction: (f = msg.getCompilerFunction()) && proto.sass.embedded_protocol.Value.CompilerFunction.toObject(includeInstance, f),
            hostFunction: (f = msg.getHostFunction()) && proto.sass.embedded_protocol.Value.HostFunction.toObject(includeInstance, f),
            argumentList: (f = msg.getArgumentList()) && proto.sass.embedded_protocol.Value.ArgumentList.toObject(includeInstance, f),
            hwbColor: (f = msg.getHwbColor()) && proto.sass.embedded_protocol.Value.HwbColor.toObject(includeInstance, f),
            calculation: (f = msg.getCalculation()) && proto.sass.embedded_protocol.Value.Calculation.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.Value}
 */
proto.sass.embedded_protocol.Value.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.Value;
    return proto.sass.embedded_protocol.Value.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.Value} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.Value}
 */
proto.sass.embedded_protocol.Value.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.sass.embedded_protocol.Value.String;
                reader.readMessage(value, proto.sass.embedded_protocol.Value.String.deserializeBinaryFromReader);
                msg.setString(value);
                break;
            case 2:
                var value = new proto.sass.embedded_protocol.Value.Number;
                reader.readMessage(value, proto.sass.embedded_protocol.Value.Number.deserializeBinaryFromReader);
                msg.setNumber(value);
                break;
            case 3:
                var value = new proto.sass.embedded_protocol.Value.RgbColor;
                reader.readMessage(value, proto.sass.embedded_protocol.Value.RgbColor.deserializeBinaryFromReader);
                msg.setRgbColor(value);
                break;
            case 4:
                var value = new proto.sass.embedded_protocol.Value.HslColor;
                reader.readMessage(value, proto.sass.embedded_protocol.Value.HslColor.deserializeBinaryFromReader);
                msg.setHslColor(value);
                break;
            case 5:
                var value = new proto.sass.embedded_protocol.Value.List;
                reader.readMessage(value, proto.sass.embedded_protocol.Value.List.deserializeBinaryFromReader);
                msg.setList(value);
                break;
            case 6:
                var value = new proto.sass.embedded_protocol.Value.Map;
                reader.readMessage(value, proto.sass.embedded_protocol.Value.Map.deserializeBinaryFromReader);
                msg.setMap(value);
                break;
            case 7:
                var value = /** @type {!proto.sass.embedded_protocol.SingletonValue} */ (reader.readEnum());
                msg.setSingleton(value);
                break;
            case 8:
                var value = new proto.sass.embedded_protocol.Value.CompilerFunction;
                reader.readMessage(value, proto.sass.embedded_protocol.Value.CompilerFunction.deserializeBinaryFromReader);
                msg.setCompilerFunction(value);
                break;
            case 9:
                var value = new proto.sass.embedded_protocol.Value.HostFunction;
                reader.readMessage(value, proto.sass.embedded_protocol.Value.HostFunction.deserializeBinaryFromReader);
                msg.setHostFunction(value);
                break;
            case 10:
                var value = new proto.sass.embedded_protocol.Value.ArgumentList;
                reader.readMessage(value, proto.sass.embedded_protocol.Value.ArgumentList.deserializeBinaryFromReader);
                msg.setArgumentList(value);
                break;
            case 11:
                var value = new proto.sass.embedded_protocol.Value.HwbColor;
                reader.readMessage(value, proto.sass.embedded_protocol.Value.HwbColor.deserializeBinaryFromReader);
                msg.setHwbColor(value);
                break;
            case 12:
                var value = new proto.sass.embedded_protocol.Value.Calculation;
                reader.readMessage(value, proto.sass.embedded_protocol.Value.Calculation.deserializeBinaryFromReader);
                msg.setCalculation(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.Value.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.Value.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.Value} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.Value.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getString();
    if (f != null) {
        writer.writeMessage(1, f, proto.sass.embedded_protocol.Value.String.serializeBinaryToWriter);
    }
    f = message.getNumber();
    if (f != null) {
        writer.writeMessage(2, f, proto.sass.embedded_protocol.Value.Number.serializeBinaryToWriter);
    }
    f = message.getRgbColor();
    if (f != null) {
        writer.writeMessage(3, f, proto.sass.embedded_protocol.Value.RgbColor.serializeBinaryToWriter);
    }
    f = message.getHslColor();
    if (f != null) {
        writer.writeMessage(4, f, proto.sass.embedded_protocol.Value.HslColor.serializeBinaryToWriter);
    }
    f = message.getList();
    if (f != null) {
        writer.writeMessage(5, f, proto.sass.embedded_protocol.Value.List.serializeBinaryToWriter);
    }
    f = message.getMap();
    if (f != null) {
        writer.writeMessage(6, f, proto.sass.embedded_protocol.Value.Map.serializeBinaryToWriter);
    }
    f = /** @type {!proto.sass.embedded_protocol.SingletonValue} */ (jspb.Message.getField(message, 7));
    if (f != null) {
        writer.writeEnum(7, f);
    }
    f = message.getCompilerFunction();
    if (f != null) {
        writer.writeMessage(8, f, proto.sass.embedded_protocol.Value.CompilerFunction.serializeBinaryToWriter);
    }
    f = message.getHostFunction();
    if (f != null) {
        writer.writeMessage(9, f, proto.sass.embedded_protocol.Value.HostFunction.serializeBinaryToWriter);
    }
    f = message.getArgumentList();
    if (f != null) {
        writer.writeMessage(10, f, proto.sass.embedded_protocol.Value.ArgumentList.serializeBinaryToWriter);
    }
    f = message.getHwbColor();
    if (f != null) {
        writer.writeMessage(11, f, proto.sass.embedded_protocol.Value.HwbColor.serializeBinaryToWriter);
    }
    f = message.getCalculation();
    if (f != null) {
        writer.writeMessage(12, f, proto.sass.embedded_protocol.Value.Calculation.serializeBinaryToWriter);
    }
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.Value.String.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.Value.String.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.Value.String} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.Value.String.toObject = function (includeInstance, msg) {
        var f, obj = {
            text: jspb.Message.getFieldWithDefault(msg, 1, ""),
            quoted: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.Value.String}
 */
proto.sass.embedded_protocol.Value.String.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.Value.String;
    return proto.sass.embedded_protocol.Value.String.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.Value.String} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.Value.String}
 */
proto.sass.embedded_protocol.Value.String.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setText(value);
                break;
            case 2:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setQuoted(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.Value.String.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.Value.String.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.Value.String} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.Value.String.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getText();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getQuoted();
    if (f) {
        writer.writeBool(2, f);
    }
};
/**
 * optional string text = 1;
 * @return {string}
 */
proto.sass.embedded_protocol.Value.String.prototype.getText = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.Value.String} returns this
 */
proto.sass.embedded_protocol.Value.String.prototype.setText = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional bool quoted = 2;
 * @return {boolean}
 */
proto.sass.embedded_protocol.Value.String.prototype.getQuoted = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};
/**
 * @param {boolean} value
 * @return {!proto.sass.embedded_protocol.Value.String} returns this
 */
proto.sass.embedded_protocol.Value.String.prototype.setQuoted = function (value) {
    return jspb.Message.setProto3BooleanField(this, 2, value);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sass.embedded_protocol.Value.Number.repeatedFields_ = [2, 3];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.Value.Number.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.Value.Number.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.Value.Number} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.Value.Number.toObject = function (includeInstance, msg) {
        var f, obj = {
            value: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
            numeratorsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
            denominatorsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.Value.Number}
 */
proto.sass.embedded_protocol.Value.Number.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.Value.Number;
    return proto.sass.embedded_protocol.Value.Number.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.Value.Number} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.Value.Number}
 */
proto.sass.embedded_protocol.Value.Number.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setValue(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.addNumerators(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.addDenominators(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.Value.Number.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.Value.Number.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.Value.Number} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.Value.Number.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getValue();
    if (f !== 0.0) {
        writer.writeDouble(1, f);
    }
    f = message.getNumeratorsList();
    if (f.length > 0) {
        writer.writeRepeatedString(2, f);
    }
    f = message.getDenominatorsList();
    if (f.length > 0) {
        writer.writeRepeatedString(3, f);
    }
};
/**
 * optional double value = 1;
 * @return {number}
 */
proto.sass.embedded_protocol.Value.Number.prototype.getValue = function () {
    return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.Value.Number} returns this
 */
proto.sass.embedded_protocol.Value.Number.prototype.setValue = function (value) {
    return jspb.Message.setProto3FloatField(this, 1, value);
};
/**
 * repeated string numerators = 2;
 * @return {!Array<string>}
 */
proto.sass.embedded_protocol.Value.Number.prototype.getNumeratorsList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.sass.embedded_protocol.Value.Number} returns this
 */
proto.sass.embedded_protocol.Value.Number.prototype.setNumeratorsList = function (value) {
    return jspb.Message.setField(this, 2, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.sass.embedded_protocol.Value.Number} returns this
 */
proto.sass.embedded_protocol.Value.Number.prototype.addNumerators = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sass.embedded_protocol.Value.Number} returns this
 */
proto.sass.embedded_protocol.Value.Number.prototype.clearNumeratorsList = function () {
    return this.setNumeratorsList([]);
};
/**
 * repeated string denominators = 3;
 * @return {!Array<string>}
 */
proto.sass.embedded_protocol.Value.Number.prototype.getDenominatorsList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.sass.embedded_protocol.Value.Number} returns this
 */
proto.sass.embedded_protocol.Value.Number.prototype.setDenominatorsList = function (value) {
    return jspb.Message.setField(this, 3, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.sass.embedded_protocol.Value.Number} returns this
 */
proto.sass.embedded_protocol.Value.Number.prototype.addDenominators = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sass.embedded_protocol.Value.Number} returns this
 */
proto.sass.embedded_protocol.Value.Number.prototype.clearDenominatorsList = function () {
    return this.setDenominatorsList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.Value.RgbColor.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.Value.RgbColor.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.Value.RgbColor} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.Value.RgbColor.toObject = function (includeInstance, msg) {
        var f, obj = {
            red: jspb.Message.getFieldWithDefault(msg, 1, 0),
            green: jspb.Message.getFieldWithDefault(msg, 2, 0),
            blue: jspb.Message.getFieldWithDefault(msg, 3, 0),
            alpha: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.Value.RgbColor}
 */
proto.sass.embedded_protocol.Value.RgbColor.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.Value.RgbColor;
    return proto.sass.embedded_protocol.Value.RgbColor.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.Value.RgbColor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.Value.RgbColor}
 */
proto.sass.embedded_protocol.Value.RgbColor.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setRed(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setGreen(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setBlue(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setAlpha(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.Value.RgbColor.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.Value.RgbColor.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.Value.RgbColor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.Value.RgbColor.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getRed();
    if (f !== 0) {
        writer.writeUint32(1, f);
    }
    f = message.getGreen();
    if (f !== 0) {
        writer.writeUint32(2, f);
    }
    f = message.getBlue();
    if (f !== 0) {
        writer.writeUint32(3, f);
    }
    f = message.getAlpha();
    if (f !== 0.0) {
        writer.writeDouble(4, f);
    }
};
/**
 * optional uint32 red = 1;
 * @return {number}
 */
proto.sass.embedded_protocol.Value.RgbColor.prototype.getRed = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.Value.RgbColor} returns this
 */
proto.sass.embedded_protocol.Value.RgbColor.prototype.setRed = function (value) {
    return jspb.Message.setProto3IntField(this, 1, value);
};
/**
 * optional uint32 green = 2;
 * @return {number}
 */
proto.sass.embedded_protocol.Value.RgbColor.prototype.getGreen = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.Value.RgbColor} returns this
 */
proto.sass.embedded_protocol.Value.RgbColor.prototype.setGreen = function (value) {
    return jspb.Message.setProto3IntField(this, 2, value);
};
/**
 * optional uint32 blue = 3;
 * @return {number}
 */
proto.sass.embedded_protocol.Value.RgbColor.prototype.getBlue = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.Value.RgbColor} returns this
 */
proto.sass.embedded_protocol.Value.RgbColor.prototype.setBlue = function (value) {
    return jspb.Message.setProto3IntField(this, 3, value);
};
/**
 * optional double alpha = 4;
 * @return {number}
 */
proto.sass.embedded_protocol.Value.RgbColor.prototype.getAlpha = function () {
    return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.Value.RgbColor} returns this
 */
proto.sass.embedded_protocol.Value.RgbColor.prototype.setAlpha = function (value) {
    return jspb.Message.setProto3FloatField(this, 4, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.Value.HslColor.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.Value.HslColor.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.Value.HslColor} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.Value.HslColor.toObject = function (includeInstance, msg) {
        var f, obj = {
            hue: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
            saturation: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
            lightness: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
            alpha: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.Value.HslColor}
 */
proto.sass.embedded_protocol.Value.HslColor.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.Value.HslColor;
    return proto.sass.embedded_protocol.Value.HslColor.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.Value.HslColor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.Value.HslColor}
 */
proto.sass.embedded_protocol.Value.HslColor.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setHue(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setSaturation(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setLightness(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setAlpha(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.Value.HslColor.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.Value.HslColor.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.Value.HslColor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.Value.HslColor.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getHue();
    if (f !== 0.0) {
        writer.writeDouble(1, f);
    }
    f = message.getSaturation();
    if (f !== 0.0) {
        writer.writeDouble(2, f);
    }
    f = message.getLightness();
    if (f !== 0.0) {
        writer.writeDouble(3, f);
    }
    f = message.getAlpha();
    if (f !== 0.0) {
        writer.writeDouble(4, f);
    }
};
/**
 * optional double hue = 1;
 * @return {number}
 */
proto.sass.embedded_protocol.Value.HslColor.prototype.getHue = function () {
    return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.Value.HslColor} returns this
 */
proto.sass.embedded_protocol.Value.HslColor.prototype.setHue = function (value) {
    return jspb.Message.setProto3FloatField(this, 1, value);
};
/**
 * optional double saturation = 2;
 * @return {number}
 */
proto.sass.embedded_protocol.Value.HslColor.prototype.getSaturation = function () {
    return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.Value.HslColor} returns this
 */
proto.sass.embedded_protocol.Value.HslColor.prototype.setSaturation = function (value) {
    return jspb.Message.setProto3FloatField(this, 2, value);
};
/**
 * optional double lightness = 3;
 * @return {number}
 */
proto.sass.embedded_protocol.Value.HslColor.prototype.getLightness = function () {
    return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.Value.HslColor} returns this
 */
proto.sass.embedded_protocol.Value.HslColor.prototype.setLightness = function (value) {
    return jspb.Message.setProto3FloatField(this, 3, value);
};
/**
 * optional double alpha = 4;
 * @return {number}
 */
proto.sass.embedded_protocol.Value.HslColor.prototype.getAlpha = function () {
    return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.Value.HslColor} returns this
 */
proto.sass.embedded_protocol.Value.HslColor.prototype.setAlpha = function (value) {
    return jspb.Message.setProto3FloatField(this, 4, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.Value.HwbColor.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.Value.HwbColor.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.Value.HwbColor} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.Value.HwbColor.toObject = function (includeInstance, msg) {
        var f, obj = {
            hue: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
            whiteness: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
            blackness: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
            alpha: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.Value.HwbColor}
 */
proto.sass.embedded_protocol.Value.HwbColor.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.Value.HwbColor;
    return proto.sass.embedded_protocol.Value.HwbColor.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.Value.HwbColor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.Value.HwbColor}
 */
proto.sass.embedded_protocol.Value.HwbColor.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setHue(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setWhiteness(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setBlackness(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setAlpha(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.Value.HwbColor.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.Value.HwbColor.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.Value.HwbColor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.Value.HwbColor.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getHue();
    if (f !== 0.0) {
        writer.writeDouble(1, f);
    }
    f = message.getWhiteness();
    if (f !== 0.0) {
        writer.writeDouble(2, f);
    }
    f = message.getBlackness();
    if (f !== 0.0) {
        writer.writeDouble(3, f);
    }
    f = message.getAlpha();
    if (f !== 0.0) {
        writer.writeDouble(4, f);
    }
};
/**
 * optional double hue = 1;
 * @return {number}
 */
proto.sass.embedded_protocol.Value.HwbColor.prototype.getHue = function () {
    return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.Value.HwbColor} returns this
 */
proto.sass.embedded_protocol.Value.HwbColor.prototype.setHue = function (value) {
    return jspb.Message.setProto3FloatField(this, 1, value);
};
/**
 * optional double whiteness = 2;
 * @return {number}
 */
proto.sass.embedded_protocol.Value.HwbColor.prototype.getWhiteness = function () {
    return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.Value.HwbColor} returns this
 */
proto.sass.embedded_protocol.Value.HwbColor.prototype.setWhiteness = function (value) {
    return jspb.Message.setProto3FloatField(this, 2, value);
};
/**
 * optional double blackness = 3;
 * @return {number}
 */
proto.sass.embedded_protocol.Value.HwbColor.prototype.getBlackness = function () {
    return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.Value.HwbColor} returns this
 */
proto.sass.embedded_protocol.Value.HwbColor.prototype.setBlackness = function (value) {
    return jspb.Message.setProto3FloatField(this, 3, value);
};
/**
 * optional double alpha = 4;
 * @return {number}
 */
proto.sass.embedded_protocol.Value.HwbColor.prototype.getAlpha = function () {
    return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.Value.HwbColor} returns this
 */
proto.sass.embedded_protocol.Value.HwbColor.prototype.setAlpha = function (value) {
    return jspb.Message.setProto3FloatField(this, 4, value);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sass.embedded_protocol.Value.List.repeatedFields_ = [3];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.Value.List.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.Value.List.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.Value.List} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.Value.List.toObject = function (includeInstance, msg) {
        var f, obj = {
            separator: jspb.Message.getFieldWithDefault(msg, 1, 0),
            hasBrackets: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
            contentsList: jspb.Message.toObjectList(msg.getContentsList(), proto.sass.embedded_protocol.Value.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.Value.List}
 */
proto.sass.embedded_protocol.Value.List.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.Value.List;
    return proto.sass.embedded_protocol.Value.List.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.Value.List} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.Value.List}
 */
proto.sass.embedded_protocol.Value.List.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.sass.embedded_protocol.ListSeparator} */ (reader.readEnum());
                msg.setSeparator(value);
                break;
            case 2:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setHasBrackets(value);
                break;
            case 3:
                var value = new proto.sass.embedded_protocol.Value;
                reader.readMessage(value, proto.sass.embedded_protocol.Value.deserializeBinaryFromReader);
                msg.addContents(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.Value.List.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.Value.List.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.Value.List} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.Value.List.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getSeparator();
    if (f !== 0.0) {
        writer.writeEnum(1, f);
    }
    f = message.getHasBrackets();
    if (f) {
        writer.writeBool(2, f);
    }
    f = message.getContentsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(3, f, proto.sass.embedded_protocol.Value.serializeBinaryToWriter);
    }
};
/**
 * optional ListSeparator separator = 1;
 * @return {!proto.sass.embedded_protocol.ListSeparator}
 */
proto.sass.embedded_protocol.Value.List.prototype.getSeparator = function () {
    return /** @type {!proto.sass.embedded_protocol.ListSeparator} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {!proto.sass.embedded_protocol.ListSeparator} value
 * @return {!proto.sass.embedded_protocol.Value.List} returns this
 */
proto.sass.embedded_protocol.Value.List.prototype.setSeparator = function (value) {
    return jspb.Message.setProto3EnumField(this, 1, value);
};
/**
 * optional bool has_brackets = 2;
 * @return {boolean}
 */
proto.sass.embedded_protocol.Value.List.prototype.getHasBrackets = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};
/**
 * @param {boolean} value
 * @return {!proto.sass.embedded_protocol.Value.List} returns this
 */
proto.sass.embedded_protocol.Value.List.prototype.setHasBrackets = function (value) {
    return jspb.Message.setProto3BooleanField(this, 2, value);
};
/**
 * repeated Value contents = 3;
 * @return {!Array<!proto.sass.embedded_protocol.Value>}
 */
proto.sass.embedded_protocol.Value.List.prototype.getContentsList = function () {
    return /** @type{!Array<!proto.sass.embedded_protocol.Value>} */ (jspb.Message.getRepeatedWrapperField(this, proto.sass.embedded_protocol.Value, 3));
};
/**
 * @param {!Array<!proto.sass.embedded_protocol.Value>} value
 * @return {!proto.sass.embedded_protocol.Value.List} returns this
*/
proto.sass.embedded_protocol.Value.List.prototype.setContentsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 3, value);
};
/**
 * @param {!proto.sass.embedded_protocol.Value=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sass.embedded_protocol.Value}
 */
proto.sass.embedded_protocol.Value.List.prototype.addContents = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.sass.embedded_protocol.Value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sass.embedded_protocol.Value.List} returns this
 */
proto.sass.embedded_protocol.Value.List.prototype.clearContentsList = function () {
    return this.setContentsList([]);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sass.embedded_protocol.Value.Map.repeatedFields_ = [1];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.Value.Map.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.Value.Map.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.Value.Map} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.Value.Map.toObject = function (includeInstance, msg) {
        var f, obj = {
            entriesList: jspb.Message.toObjectList(msg.getEntriesList(), proto.sass.embedded_protocol.Value.Map.Entry.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.Value.Map}
 */
proto.sass.embedded_protocol.Value.Map.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.Value.Map;
    return proto.sass.embedded_protocol.Value.Map.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.Value.Map} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.Value.Map}
 */
proto.sass.embedded_protocol.Value.Map.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.sass.embedded_protocol.Value.Map.Entry;
                reader.readMessage(value, proto.sass.embedded_protocol.Value.Map.Entry.deserializeBinaryFromReader);
                msg.addEntries(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.Value.Map.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.Value.Map.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.Value.Map} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.Value.Map.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getEntriesList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(1, f, proto.sass.embedded_protocol.Value.Map.Entry.serializeBinaryToWriter);
    }
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.Value.Map.Entry.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.Value.Map.Entry.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.Value.Map.Entry} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.Value.Map.Entry.toObject = function (includeInstance, msg) {
        var f, obj = {
            key: (f = msg.getKey()) && proto.sass.embedded_protocol.Value.toObject(includeInstance, f),
            value: (f = msg.getValue()) && proto.sass.embedded_protocol.Value.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.Value.Map.Entry}
 */
proto.sass.embedded_protocol.Value.Map.Entry.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.Value.Map.Entry;
    return proto.sass.embedded_protocol.Value.Map.Entry.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.Value.Map.Entry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.Value.Map.Entry}
 */
proto.sass.embedded_protocol.Value.Map.Entry.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.sass.embedded_protocol.Value;
                reader.readMessage(value, proto.sass.embedded_protocol.Value.deserializeBinaryFromReader);
                msg.setKey(value);
                break;
            case 2:
                var value = new proto.sass.embedded_protocol.Value;
                reader.readMessage(value, proto.sass.embedded_protocol.Value.deserializeBinaryFromReader);
                msg.setValue(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.Value.Map.Entry.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.Value.Map.Entry.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.Value.Map.Entry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.Value.Map.Entry.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getKey();
    if (f != null) {
        writer.writeMessage(1, f, proto.sass.embedded_protocol.Value.serializeBinaryToWriter);
    }
    f = message.getValue();
    if (f != null) {
        writer.writeMessage(2, f, proto.sass.embedded_protocol.Value.serializeBinaryToWriter);
    }
};
/**
 * optional Value key = 1;
 * @return {?proto.sass.embedded_protocol.Value}
 */
proto.sass.embedded_protocol.Value.Map.Entry.prototype.getKey = function () {
    return /** @type{?proto.sass.embedded_protocol.Value} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.Value, 1));
};
/**
 * @param {?proto.sass.embedded_protocol.Value|undefined} value
 * @return {!proto.sass.embedded_protocol.Value.Map.Entry} returns this
*/
proto.sass.embedded_protocol.Value.Map.Entry.prototype.setKey = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.Value.Map.Entry} returns this
 */
proto.sass.embedded_protocol.Value.Map.Entry.prototype.clearKey = function () {
    return this.setKey(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.Value.Map.Entry.prototype.hasKey = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional Value value = 2;
 * @return {?proto.sass.embedded_protocol.Value}
 */
proto.sass.embedded_protocol.Value.Map.Entry.prototype.getValue = function () {
    return /** @type{?proto.sass.embedded_protocol.Value} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.Value, 2));
};
/**
 * @param {?proto.sass.embedded_protocol.Value|undefined} value
 * @return {!proto.sass.embedded_protocol.Value.Map.Entry} returns this
*/
proto.sass.embedded_protocol.Value.Map.Entry.prototype.setValue = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.Value.Map.Entry} returns this
 */
proto.sass.embedded_protocol.Value.Map.Entry.prototype.clearValue = function () {
    return this.setValue(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.Value.Map.Entry.prototype.hasValue = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * repeated Entry entries = 1;
 * @return {!Array<!proto.sass.embedded_protocol.Value.Map.Entry>}
 */
proto.sass.embedded_protocol.Value.Map.prototype.getEntriesList = function () {
    return /** @type{!Array<!proto.sass.embedded_protocol.Value.Map.Entry>} */ (jspb.Message.getRepeatedWrapperField(this, proto.sass.embedded_protocol.Value.Map.Entry, 1));
};
/**
 * @param {!Array<!proto.sass.embedded_protocol.Value.Map.Entry>} value
 * @return {!proto.sass.embedded_protocol.Value.Map} returns this
*/
proto.sass.embedded_protocol.Value.Map.prototype.setEntriesList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 1, value);
};
/**
 * @param {!proto.sass.embedded_protocol.Value.Map.Entry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sass.embedded_protocol.Value.Map.Entry}
 */
proto.sass.embedded_protocol.Value.Map.prototype.addEntries = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.sass.embedded_protocol.Value.Map.Entry, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sass.embedded_protocol.Value.Map} returns this
 */
proto.sass.embedded_protocol.Value.Map.prototype.clearEntriesList = function () {
    return this.setEntriesList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.Value.CompilerFunction.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.Value.CompilerFunction.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.Value.CompilerFunction} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.Value.CompilerFunction.toObject = function (includeInstance, msg) {
        var f, obj = {
            id: jspb.Message.getFieldWithDefault(msg, 1, 0)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.Value.CompilerFunction}
 */
proto.sass.embedded_protocol.Value.CompilerFunction.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.Value.CompilerFunction;
    return proto.sass.embedded_protocol.Value.CompilerFunction.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.Value.CompilerFunction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.Value.CompilerFunction}
 */
proto.sass.embedded_protocol.Value.CompilerFunction.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setId(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.Value.CompilerFunction.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.Value.CompilerFunction.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.Value.CompilerFunction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.Value.CompilerFunction.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getId();
    if (f !== 0) {
        writer.writeUint32(1, f);
    }
};
/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.sass.embedded_protocol.Value.CompilerFunction.prototype.getId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.Value.CompilerFunction} returns this
 */
proto.sass.embedded_protocol.Value.CompilerFunction.prototype.setId = function (value) {
    return jspb.Message.setProto3IntField(this, 1, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.Value.HostFunction.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.Value.HostFunction.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.Value.HostFunction} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.Value.HostFunction.toObject = function (includeInstance, msg) {
        var f, obj = {
            id: jspb.Message.getFieldWithDefault(msg, 1, 0),
            signature: jspb.Message.getFieldWithDefault(msg, 2, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.Value.HostFunction}
 */
proto.sass.embedded_protocol.Value.HostFunction.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.Value.HostFunction;
    return proto.sass.embedded_protocol.Value.HostFunction.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.Value.HostFunction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.Value.HostFunction}
 */
proto.sass.embedded_protocol.Value.HostFunction.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setId(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setSignature(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.Value.HostFunction.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.Value.HostFunction.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.Value.HostFunction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.Value.HostFunction.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getId();
    if (f !== 0) {
        writer.writeUint32(1, f);
    }
    f = message.getSignature();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
};
/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.sass.embedded_protocol.Value.HostFunction.prototype.getId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.Value.HostFunction} returns this
 */
proto.sass.embedded_protocol.Value.HostFunction.prototype.setId = function (value) {
    return jspb.Message.setProto3IntField(this, 1, value);
};
/**
 * optional string signature = 2;
 * @return {string}
 */
proto.sass.embedded_protocol.Value.HostFunction.prototype.getSignature = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.Value.HostFunction} returns this
 */
proto.sass.embedded_protocol.Value.HostFunction.prototype.setSignature = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sass.embedded_protocol.Value.ArgumentList.repeatedFields_ = [3];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.Value.ArgumentList.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.Value.ArgumentList.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.Value.ArgumentList} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.Value.ArgumentList.toObject = function (includeInstance, msg) {
        var f, obj = {
            id: jspb.Message.getFieldWithDefault(msg, 1, 0),
            separator: jspb.Message.getFieldWithDefault(msg, 2, 0),
            contentsList: jspb.Message.toObjectList(msg.getContentsList(), proto.sass.embedded_protocol.Value.toObject, includeInstance),
            keywordsMap: (f = msg.getKeywordsMap()) ? f.toObject(includeInstance, proto.sass.embedded_protocol.Value.toObject) : []
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.Value.ArgumentList}
 */
proto.sass.embedded_protocol.Value.ArgumentList.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.Value.ArgumentList;
    return proto.sass.embedded_protocol.Value.ArgumentList.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.Value.ArgumentList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.Value.ArgumentList}
 */
proto.sass.embedded_protocol.Value.ArgumentList.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setId(value);
                break;
            case 2:
                var value = /** @type {!proto.sass.embedded_protocol.ListSeparator} */ (reader.readEnum());
                msg.setSeparator(value);
                break;
            case 3:
                var value = new proto.sass.embedded_protocol.Value;
                reader.readMessage(value, proto.sass.embedded_protocol.Value.deserializeBinaryFromReader);
                msg.addContents(value);
                break;
            case 4:
                var value = msg.getKeywordsMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.sass.embedded_protocol.Value.deserializeBinaryFromReader, "", new proto.sass.embedded_protocol.Value());
                });
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.Value.ArgumentList.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.Value.ArgumentList.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.Value.ArgumentList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.Value.ArgumentList.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getId();
    if (f !== 0) {
        writer.writeUint32(1, f);
    }
    f = message.getSeparator();
    if (f !== 0.0) {
        writer.writeEnum(2, f);
    }
    f = message.getContentsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(3, f, proto.sass.embedded_protocol.Value.serializeBinaryToWriter);
    }
    f = message.getKeywordsMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.sass.embedded_protocol.Value.serializeBinaryToWriter);
    }
};
/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.sass.embedded_protocol.Value.ArgumentList.prototype.getId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.sass.embedded_protocol.Value.ArgumentList} returns this
 */
proto.sass.embedded_protocol.Value.ArgumentList.prototype.setId = function (value) {
    return jspb.Message.setProto3IntField(this, 1, value);
};
/**
 * optional ListSeparator separator = 2;
 * @return {!proto.sass.embedded_protocol.ListSeparator}
 */
proto.sass.embedded_protocol.Value.ArgumentList.prototype.getSeparator = function () {
    return /** @type {!proto.sass.embedded_protocol.ListSeparator} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};
/**
 * @param {!proto.sass.embedded_protocol.ListSeparator} value
 * @return {!proto.sass.embedded_protocol.Value.ArgumentList} returns this
 */
proto.sass.embedded_protocol.Value.ArgumentList.prototype.setSeparator = function (value) {
    return jspb.Message.setProto3EnumField(this, 2, value);
};
/**
 * repeated Value contents = 3;
 * @return {!Array<!proto.sass.embedded_protocol.Value>}
 */
proto.sass.embedded_protocol.Value.ArgumentList.prototype.getContentsList = function () {
    return /** @type{!Array<!proto.sass.embedded_protocol.Value>} */ (jspb.Message.getRepeatedWrapperField(this, proto.sass.embedded_protocol.Value, 3));
};
/**
 * @param {!Array<!proto.sass.embedded_protocol.Value>} value
 * @return {!proto.sass.embedded_protocol.Value.ArgumentList} returns this
*/
proto.sass.embedded_protocol.Value.ArgumentList.prototype.setContentsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 3, value);
};
/**
 * @param {!proto.sass.embedded_protocol.Value=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sass.embedded_protocol.Value}
 */
proto.sass.embedded_protocol.Value.ArgumentList.prototype.addContents = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.sass.embedded_protocol.Value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sass.embedded_protocol.Value.ArgumentList} returns this
 */
proto.sass.embedded_protocol.Value.ArgumentList.prototype.clearContentsList = function () {
    return this.setContentsList([]);
};
/**
 * map<string, Value> keywords = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.sass.embedded_protocol.Value>}
 */
proto.sass.embedded_protocol.Value.ArgumentList.prototype.getKeywordsMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,!proto.sass.embedded_protocol.Value>} */ (jspb.Message.getMapField(this, 4, opt_noLazyCreate, proto.sass.embedded_protocol.Value));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.sass.embedded_protocol.Value.ArgumentList} returns this
 */
proto.sass.embedded_protocol.Value.ArgumentList.prototype.clearKeywordsMap = function () {
    this.getKeywordsMap().clear();
    return this;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sass.embedded_protocol.Value.Calculation.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.Value.Calculation.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.Value.Calculation.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.Value.Calculation} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.Value.Calculation.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: jspb.Message.getFieldWithDefault(msg, 1, ""),
            argumentsList: jspb.Message.toObjectList(msg.getArgumentsList(), proto.sass.embedded_protocol.Value.Calculation.CalculationValue.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.Value.Calculation}
 */
proto.sass.embedded_protocol.Value.Calculation.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.Value.Calculation;
    return proto.sass.embedded_protocol.Value.Calculation.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.Value.Calculation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.Value.Calculation}
 */
proto.sass.embedded_protocol.Value.Calculation.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 2:
                var value = new proto.sass.embedded_protocol.Value.Calculation.CalculationValue;
                reader.readMessage(value, proto.sass.embedded_protocol.Value.Calculation.CalculationValue.deserializeBinaryFromReader);
                msg.addArguments(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.Value.Calculation.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.Value.Calculation.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.Value.Calculation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.Value.Calculation.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getName();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getArgumentsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.sass.embedded_protocol.Value.Calculation.CalculationValue.serializeBinaryToWriter);
    }
};
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationValue.oneofGroups_ = [[1, 2, 3, 4, 5]];
/**
 * @enum {number}
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationValue.ValueCase = {
    VALUE_NOT_SET: 0,
    NUMBER: 1,
    STRING: 2,
    INTERPOLATION: 3,
    OPERATION: 4,
    CALCULATION: 5
};
/**
 * @return {proto.sass.embedded_protocol.Value.Calculation.CalculationValue.ValueCase}
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationValue.prototype.getValueCase = function () {
    return /** @type {proto.sass.embedded_protocol.Value.Calculation.CalculationValue.ValueCase} */ (jspb.Message.computeOneofCase(this, proto.sass.embedded_protocol.Value.Calculation.CalculationValue.oneofGroups_[0]));
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.Value.Calculation.CalculationValue.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.Value.Calculation.CalculationValue.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.Value.Calculation.CalculationValue} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.Value.Calculation.CalculationValue.toObject = function (includeInstance, msg) {
        var f, obj = {
            number: (f = msg.getNumber()) && proto.sass.embedded_protocol.Value.Number.toObject(includeInstance, f),
            string: jspb.Message.getFieldWithDefault(msg, 2, ""),
            interpolation: jspb.Message.getFieldWithDefault(msg, 3, ""),
            operation: (f = msg.getOperation()) && proto.sass.embedded_protocol.Value.Calculation.CalculationOperation.toObject(includeInstance, f),
            calculation: (f = msg.getCalculation()) && proto.sass.embedded_protocol.Value.Calculation.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.Value.Calculation.CalculationValue}
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationValue.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.Value.Calculation.CalculationValue;
    return proto.sass.embedded_protocol.Value.Calculation.CalculationValue.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.Value.Calculation.CalculationValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.Value.Calculation.CalculationValue}
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationValue.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.sass.embedded_protocol.Value.Number;
                reader.readMessage(value, proto.sass.embedded_protocol.Value.Number.deserializeBinaryFromReader);
                msg.setNumber(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setString(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setInterpolation(value);
                break;
            case 4:
                var value = new proto.sass.embedded_protocol.Value.Calculation.CalculationOperation;
                reader.readMessage(value, proto.sass.embedded_protocol.Value.Calculation.CalculationOperation.deserializeBinaryFromReader);
                msg.setOperation(value);
                break;
            case 5:
                var value = new proto.sass.embedded_protocol.Value.Calculation;
                reader.readMessage(value, proto.sass.embedded_protocol.Value.Calculation.deserializeBinaryFromReader);
                msg.setCalculation(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationValue.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.Value.Calculation.CalculationValue.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.Value.Calculation.CalculationValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationValue.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getNumber();
    if (f != null) {
        writer.writeMessage(1, f, proto.sass.embedded_protocol.Value.Number.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = message.getOperation();
    if (f != null) {
        writer.writeMessage(4, f, proto.sass.embedded_protocol.Value.Calculation.CalculationOperation.serializeBinaryToWriter);
    }
    f = message.getCalculation();
    if (f != null) {
        writer.writeMessage(5, f, proto.sass.embedded_protocol.Value.Calculation.serializeBinaryToWriter);
    }
};
/**
 * optional Number number = 1;
 * @return {?proto.sass.embedded_protocol.Value.Number}
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationValue.prototype.getNumber = function () {
    return /** @type{?proto.sass.embedded_protocol.Value.Number} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.Value.Number, 1));
};
/**
 * @param {?proto.sass.embedded_protocol.Value.Number|undefined} value
 * @return {!proto.sass.embedded_protocol.Value.Calculation.CalculationValue} returns this
*/
proto.sass.embedded_protocol.Value.Calculation.CalculationValue.prototype.setNumber = function (value) {
    return jspb.Message.setOneofWrapperField(this, 1, proto.sass.embedded_protocol.Value.Calculation.CalculationValue.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.Value.Calculation.CalculationValue} returns this
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationValue.prototype.clearNumber = function () {
    return this.setNumber(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationValue.prototype.hasNumber = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string string = 2;
 * @return {string}
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationValue.prototype.getString = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.Value.Calculation.CalculationValue} returns this
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationValue.prototype.setString = function (value) {
    return jspb.Message.setOneofField(this, 2, proto.sass.embedded_protocol.Value.Calculation.CalculationValue.oneofGroups_[0], value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.sass.embedded_protocol.Value.Calculation.CalculationValue} returns this
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationValue.prototype.clearString = function () {
    return jspb.Message.setOneofField(this, 2, proto.sass.embedded_protocol.Value.Calculation.CalculationValue.oneofGroups_[0], undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationValue.prototype.hasString = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string interpolation = 3;
 * @return {string}
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationValue.prototype.getInterpolation = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.Value.Calculation.CalculationValue} returns this
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationValue.prototype.setInterpolation = function (value) {
    return jspb.Message.setOneofField(this, 3, proto.sass.embedded_protocol.Value.Calculation.CalculationValue.oneofGroups_[0], value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.sass.embedded_protocol.Value.Calculation.CalculationValue} returns this
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationValue.prototype.clearInterpolation = function () {
    return jspb.Message.setOneofField(this, 3, proto.sass.embedded_protocol.Value.Calculation.CalculationValue.oneofGroups_[0], undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationValue.prototype.hasInterpolation = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional CalculationOperation operation = 4;
 * @return {?proto.sass.embedded_protocol.Value.Calculation.CalculationOperation}
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationValue.prototype.getOperation = function () {
    return /** @type{?proto.sass.embedded_protocol.Value.Calculation.CalculationOperation} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.Value.Calculation.CalculationOperation, 4));
};
/**
 * @param {?proto.sass.embedded_protocol.Value.Calculation.CalculationOperation|undefined} value
 * @return {!proto.sass.embedded_protocol.Value.Calculation.CalculationValue} returns this
*/
proto.sass.embedded_protocol.Value.Calculation.CalculationValue.prototype.setOperation = function (value) {
    return jspb.Message.setOneofWrapperField(this, 4, proto.sass.embedded_protocol.Value.Calculation.CalculationValue.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.Value.Calculation.CalculationValue} returns this
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationValue.prototype.clearOperation = function () {
    return this.setOperation(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationValue.prototype.hasOperation = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional Calculation calculation = 5;
 * @return {?proto.sass.embedded_protocol.Value.Calculation}
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationValue.prototype.getCalculation = function () {
    return /** @type{?proto.sass.embedded_protocol.Value.Calculation} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.Value.Calculation, 5));
};
/**
 * @param {?proto.sass.embedded_protocol.Value.Calculation|undefined} value
 * @return {!proto.sass.embedded_protocol.Value.Calculation.CalculationValue} returns this
*/
proto.sass.embedded_protocol.Value.Calculation.CalculationValue.prototype.setCalculation = function (value) {
    return jspb.Message.setOneofWrapperField(this, 5, proto.sass.embedded_protocol.Value.Calculation.CalculationValue.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.Value.Calculation.CalculationValue} returns this
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationValue.prototype.clearCalculation = function () {
    return this.setCalculation(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationValue.prototype.hasCalculation = function () {
    return jspb.Message.getField(this, 5) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.sass.embedded_protocol.Value.Calculation.CalculationOperation.prototype.toObject = function (opt_includeInstance) {
        return proto.sass.embedded_protocol.Value.Calculation.CalculationOperation.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.sass.embedded_protocol.Value.Calculation.CalculationOperation} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.sass.embedded_protocol.Value.Calculation.CalculationOperation.toObject = function (includeInstance, msg) {
        var f, obj = {
            operator: jspb.Message.getFieldWithDefault(msg, 1, 0),
            left: (f = msg.getLeft()) && proto.sass.embedded_protocol.Value.Calculation.CalculationValue.toObject(includeInstance, f),
            right: (f = msg.getRight()) && proto.sass.embedded_protocol.Value.Calculation.CalculationValue.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sass.embedded_protocol.Value.Calculation.CalculationOperation}
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationOperation.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.sass.embedded_protocol.Value.Calculation.CalculationOperation;
    return proto.sass.embedded_protocol.Value.Calculation.CalculationOperation.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sass.embedded_protocol.Value.Calculation.CalculationOperation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sass.embedded_protocol.Value.Calculation.CalculationOperation}
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationOperation.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.sass.embedded_protocol.CalculationOperator} */ (reader.readEnum());
                msg.setOperator(value);
                break;
            case 2:
                var value = new proto.sass.embedded_protocol.Value.Calculation.CalculationValue;
                reader.readMessage(value, proto.sass.embedded_protocol.Value.Calculation.CalculationValue.deserializeBinaryFromReader);
                msg.setLeft(value);
                break;
            case 3:
                var value = new proto.sass.embedded_protocol.Value.Calculation.CalculationValue;
                reader.readMessage(value, proto.sass.embedded_protocol.Value.Calculation.CalculationValue.deserializeBinaryFromReader);
                msg.setRight(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationOperation.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.sass.embedded_protocol.Value.Calculation.CalculationOperation.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sass.embedded_protocol.Value.Calculation.CalculationOperation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationOperation.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getOperator();
    if (f !== 0.0) {
        writer.writeEnum(1, f);
    }
    f = message.getLeft();
    if (f != null) {
        writer.writeMessage(2, f, proto.sass.embedded_protocol.Value.Calculation.CalculationValue.serializeBinaryToWriter);
    }
    f = message.getRight();
    if (f != null) {
        writer.writeMessage(3, f, proto.sass.embedded_protocol.Value.Calculation.CalculationValue.serializeBinaryToWriter);
    }
};
/**
 * optional CalculationOperator operator = 1;
 * @return {!proto.sass.embedded_protocol.CalculationOperator}
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationOperation.prototype.getOperator = function () {
    return /** @type {!proto.sass.embedded_protocol.CalculationOperator} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {!proto.sass.embedded_protocol.CalculationOperator} value
 * @return {!proto.sass.embedded_protocol.Value.Calculation.CalculationOperation} returns this
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationOperation.prototype.setOperator = function (value) {
    return jspb.Message.setProto3EnumField(this, 1, value);
};
/**
 * optional CalculationValue left = 2;
 * @return {?proto.sass.embedded_protocol.Value.Calculation.CalculationValue}
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationOperation.prototype.getLeft = function () {
    return /** @type{?proto.sass.embedded_protocol.Value.Calculation.CalculationValue} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.Value.Calculation.CalculationValue, 2));
};
/**
 * @param {?proto.sass.embedded_protocol.Value.Calculation.CalculationValue|undefined} value
 * @return {!proto.sass.embedded_protocol.Value.Calculation.CalculationOperation} returns this
*/
proto.sass.embedded_protocol.Value.Calculation.CalculationOperation.prototype.setLeft = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.Value.Calculation.CalculationOperation} returns this
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationOperation.prototype.clearLeft = function () {
    return this.setLeft(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationOperation.prototype.hasLeft = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional CalculationValue right = 3;
 * @return {?proto.sass.embedded_protocol.Value.Calculation.CalculationValue}
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationOperation.prototype.getRight = function () {
    return /** @type{?proto.sass.embedded_protocol.Value.Calculation.CalculationValue} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.Value.Calculation.CalculationValue, 3));
};
/**
 * @param {?proto.sass.embedded_protocol.Value.Calculation.CalculationValue|undefined} value
 * @return {!proto.sass.embedded_protocol.Value.Calculation.CalculationOperation} returns this
*/
proto.sass.embedded_protocol.Value.Calculation.CalculationOperation.prototype.setRight = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.Value.Calculation.CalculationOperation} returns this
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationOperation.prototype.clearRight = function () {
    return this.setRight(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.Value.Calculation.CalculationOperation.prototype.hasRight = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string name = 1;
 * @return {string}
 */
proto.sass.embedded_protocol.Value.Calculation.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.sass.embedded_protocol.Value.Calculation} returns this
 */
proto.sass.embedded_protocol.Value.Calculation.prototype.setName = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * repeated CalculationValue arguments = 2;
 * @return {!Array<!proto.sass.embedded_protocol.Value.Calculation.CalculationValue>}
 */
proto.sass.embedded_protocol.Value.Calculation.prototype.getArgumentsList = function () {
    return /** @type{!Array<!proto.sass.embedded_protocol.Value.Calculation.CalculationValue>} */ (jspb.Message.getRepeatedWrapperField(this, proto.sass.embedded_protocol.Value.Calculation.CalculationValue, 2));
};
/**
 * @param {!Array<!proto.sass.embedded_protocol.Value.Calculation.CalculationValue>} value
 * @return {!proto.sass.embedded_protocol.Value.Calculation} returns this
*/
proto.sass.embedded_protocol.Value.Calculation.prototype.setArgumentsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.sass.embedded_protocol.Value.Calculation.CalculationValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sass.embedded_protocol.Value.Calculation.CalculationValue}
 */
proto.sass.embedded_protocol.Value.Calculation.prototype.addArguments = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sass.embedded_protocol.Value.Calculation.CalculationValue, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sass.embedded_protocol.Value.Calculation} returns this
 */
proto.sass.embedded_protocol.Value.Calculation.prototype.clearArgumentsList = function () {
    return this.setArgumentsList([]);
};
/**
 * optional String string = 1;
 * @return {?proto.sass.embedded_protocol.Value.String}
 */
proto.sass.embedded_protocol.Value.prototype.getString = function () {
    return /** @type{?proto.sass.embedded_protocol.Value.String} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.Value.String, 1));
};
/**
 * @param {?proto.sass.embedded_protocol.Value.String|undefined} value
 * @return {!proto.sass.embedded_protocol.Value} returns this
*/
proto.sass.embedded_protocol.Value.prototype.setString = function (value) {
    return jspb.Message.setOneofWrapperField(this, 1, proto.sass.embedded_protocol.Value.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.Value} returns this
 */
proto.sass.embedded_protocol.Value.prototype.clearString = function () {
    return this.setString(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.Value.prototype.hasString = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional Number number = 2;
 * @return {?proto.sass.embedded_protocol.Value.Number}
 */
proto.sass.embedded_protocol.Value.prototype.getNumber = function () {
    return /** @type{?proto.sass.embedded_protocol.Value.Number} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.Value.Number, 2));
};
/**
 * @param {?proto.sass.embedded_protocol.Value.Number|undefined} value
 * @return {!proto.sass.embedded_protocol.Value} returns this
*/
proto.sass.embedded_protocol.Value.prototype.setNumber = function (value) {
    return jspb.Message.setOneofWrapperField(this, 2, proto.sass.embedded_protocol.Value.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.Value} returns this
 */
proto.sass.embedded_protocol.Value.prototype.clearNumber = function () {
    return this.setNumber(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.Value.prototype.hasNumber = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional RgbColor rgb_color = 3;
 * @return {?proto.sass.embedded_protocol.Value.RgbColor}
 */
proto.sass.embedded_protocol.Value.prototype.getRgbColor = function () {
    return /** @type{?proto.sass.embedded_protocol.Value.RgbColor} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.Value.RgbColor, 3));
};
/**
 * @param {?proto.sass.embedded_protocol.Value.RgbColor|undefined} value
 * @return {!proto.sass.embedded_protocol.Value} returns this
*/
proto.sass.embedded_protocol.Value.prototype.setRgbColor = function (value) {
    return jspb.Message.setOneofWrapperField(this, 3, proto.sass.embedded_protocol.Value.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.Value} returns this
 */
proto.sass.embedded_protocol.Value.prototype.clearRgbColor = function () {
    return this.setRgbColor(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.Value.prototype.hasRgbColor = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional HslColor hsl_color = 4;
 * @return {?proto.sass.embedded_protocol.Value.HslColor}
 */
proto.sass.embedded_protocol.Value.prototype.getHslColor = function () {
    return /** @type{?proto.sass.embedded_protocol.Value.HslColor} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.Value.HslColor, 4));
};
/**
 * @param {?proto.sass.embedded_protocol.Value.HslColor|undefined} value
 * @return {!proto.sass.embedded_protocol.Value} returns this
*/
proto.sass.embedded_protocol.Value.prototype.setHslColor = function (value) {
    return jspb.Message.setOneofWrapperField(this, 4, proto.sass.embedded_protocol.Value.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.Value} returns this
 */
proto.sass.embedded_protocol.Value.prototype.clearHslColor = function () {
    return this.setHslColor(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.Value.prototype.hasHslColor = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional List list = 5;
 * @return {?proto.sass.embedded_protocol.Value.List}
 */
proto.sass.embedded_protocol.Value.prototype.getList = function () {
    return /** @type{?proto.sass.embedded_protocol.Value.List} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.Value.List, 5));
};
/**
 * @param {?proto.sass.embedded_protocol.Value.List|undefined} value
 * @return {!proto.sass.embedded_protocol.Value} returns this
*/
proto.sass.embedded_protocol.Value.prototype.setList = function (value) {
    return jspb.Message.setOneofWrapperField(this, 5, proto.sass.embedded_protocol.Value.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.Value} returns this
 */
proto.sass.embedded_protocol.Value.prototype.clearList = function () {
    return this.setList(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.Value.prototype.hasList = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional Map map = 6;
 * @return {?proto.sass.embedded_protocol.Value.Map}
 */
proto.sass.embedded_protocol.Value.prototype.getMap = function () {
    return /** @type{?proto.sass.embedded_protocol.Value.Map} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.Value.Map, 6));
};
/**
 * @param {?proto.sass.embedded_protocol.Value.Map|undefined} value
 * @return {!proto.sass.embedded_protocol.Value} returns this
*/
proto.sass.embedded_protocol.Value.prototype.setMap = function (value) {
    return jspb.Message.setOneofWrapperField(this, 6, proto.sass.embedded_protocol.Value.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.Value} returns this
 */
proto.sass.embedded_protocol.Value.prototype.clearMap = function () {
    return this.setMap(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.Value.prototype.hasMap = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * optional SingletonValue singleton = 7;
 * @return {!proto.sass.embedded_protocol.SingletonValue}
 */
proto.sass.embedded_protocol.Value.prototype.getSingleton = function () {
    return /** @type {!proto.sass.embedded_protocol.SingletonValue} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};
/**
 * @param {!proto.sass.embedded_protocol.SingletonValue} value
 * @return {!proto.sass.embedded_protocol.Value} returns this
 */
proto.sass.embedded_protocol.Value.prototype.setSingleton = function (value) {
    return jspb.Message.setOneofField(this, 7, proto.sass.embedded_protocol.Value.oneofGroups_[0], value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.sass.embedded_protocol.Value} returns this
 */
proto.sass.embedded_protocol.Value.prototype.clearSingleton = function () {
    return jspb.Message.setOneofField(this, 7, proto.sass.embedded_protocol.Value.oneofGroups_[0], undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.Value.prototype.hasSingleton = function () {
    return jspb.Message.getField(this, 7) != null;
};
/**
 * optional CompilerFunction compiler_function = 8;
 * @return {?proto.sass.embedded_protocol.Value.CompilerFunction}
 */
proto.sass.embedded_protocol.Value.prototype.getCompilerFunction = function () {
    return /** @type{?proto.sass.embedded_protocol.Value.CompilerFunction} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.Value.CompilerFunction, 8));
};
/**
 * @param {?proto.sass.embedded_protocol.Value.CompilerFunction|undefined} value
 * @return {!proto.sass.embedded_protocol.Value} returns this
*/
proto.sass.embedded_protocol.Value.prototype.setCompilerFunction = function (value) {
    return jspb.Message.setOneofWrapperField(this, 8, proto.sass.embedded_protocol.Value.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.Value} returns this
 */
proto.sass.embedded_protocol.Value.prototype.clearCompilerFunction = function () {
    return this.setCompilerFunction(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.Value.prototype.hasCompilerFunction = function () {
    return jspb.Message.getField(this, 8) != null;
};
/**
 * optional HostFunction host_function = 9;
 * @return {?proto.sass.embedded_protocol.Value.HostFunction}
 */
proto.sass.embedded_protocol.Value.prototype.getHostFunction = function () {
    return /** @type{?proto.sass.embedded_protocol.Value.HostFunction} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.Value.HostFunction, 9));
};
/**
 * @param {?proto.sass.embedded_protocol.Value.HostFunction|undefined} value
 * @return {!proto.sass.embedded_protocol.Value} returns this
*/
proto.sass.embedded_protocol.Value.prototype.setHostFunction = function (value) {
    return jspb.Message.setOneofWrapperField(this, 9, proto.sass.embedded_protocol.Value.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.Value} returns this
 */
proto.sass.embedded_protocol.Value.prototype.clearHostFunction = function () {
    return this.setHostFunction(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.Value.prototype.hasHostFunction = function () {
    return jspb.Message.getField(this, 9) != null;
};
/**
 * optional ArgumentList argument_list = 10;
 * @return {?proto.sass.embedded_protocol.Value.ArgumentList}
 */
proto.sass.embedded_protocol.Value.prototype.getArgumentList = function () {
    return /** @type{?proto.sass.embedded_protocol.Value.ArgumentList} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.Value.ArgumentList, 10));
};
/**
 * @param {?proto.sass.embedded_protocol.Value.ArgumentList|undefined} value
 * @return {!proto.sass.embedded_protocol.Value} returns this
*/
proto.sass.embedded_protocol.Value.prototype.setArgumentList = function (value) {
    return jspb.Message.setOneofWrapperField(this, 10, proto.sass.embedded_protocol.Value.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.Value} returns this
 */
proto.sass.embedded_protocol.Value.prototype.clearArgumentList = function () {
    return this.setArgumentList(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.Value.prototype.hasArgumentList = function () {
    return jspb.Message.getField(this, 10) != null;
};
/**
 * optional HwbColor hwb_color = 11;
 * @return {?proto.sass.embedded_protocol.Value.HwbColor}
 */
proto.sass.embedded_protocol.Value.prototype.getHwbColor = function () {
    return /** @type{?proto.sass.embedded_protocol.Value.HwbColor} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.Value.HwbColor, 11));
};
/**
 * @param {?proto.sass.embedded_protocol.Value.HwbColor|undefined} value
 * @return {!proto.sass.embedded_protocol.Value} returns this
*/
proto.sass.embedded_protocol.Value.prototype.setHwbColor = function (value) {
    return jspb.Message.setOneofWrapperField(this, 11, proto.sass.embedded_protocol.Value.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.Value} returns this
 */
proto.sass.embedded_protocol.Value.prototype.clearHwbColor = function () {
    return this.setHwbColor(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.Value.prototype.hasHwbColor = function () {
    return jspb.Message.getField(this, 11) != null;
};
/**
 * optional Calculation calculation = 12;
 * @return {?proto.sass.embedded_protocol.Value.Calculation}
 */
proto.sass.embedded_protocol.Value.prototype.getCalculation = function () {
    return /** @type{?proto.sass.embedded_protocol.Value.Calculation} */ (jspb.Message.getWrapperField(this, proto.sass.embedded_protocol.Value.Calculation, 12));
};
/**
 * @param {?proto.sass.embedded_protocol.Value.Calculation|undefined} value
 * @return {!proto.sass.embedded_protocol.Value} returns this
*/
proto.sass.embedded_protocol.Value.prototype.setCalculation = function (value) {
    return jspb.Message.setOneofWrapperField(this, 12, proto.sass.embedded_protocol.Value.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.sass.embedded_protocol.Value} returns this
 */
proto.sass.embedded_protocol.Value.prototype.clearCalculation = function () {
    return this.setCalculation(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sass.embedded_protocol.Value.prototype.hasCalculation = function () {
    return jspb.Message.getField(this, 12) != null;
};
/**
 * @enum {number}
 */
proto.sass.embedded_protocol.OutputStyle = {
    EXPANDED: 0,
    COMPRESSED: 1
};
/**
 * @enum {number}
 */
proto.sass.embedded_protocol.Syntax = {
    SCSS: 0,
    INDENTED: 1,
    CSS: 2
};
/**
 * @enum {number}
 */
proto.sass.embedded_protocol.LogEventType = {
    WARNING: 0,
    DEPRECATION_WARNING: 1,
    DEBUG: 2
};
/**
 * @enum {number}
 */
proto.sass.embedded_protocol.ProtocolErrorType = {
    PARSE: 0,
    PARAMS: 1,
    INTERNAL: 2
};
/**
 * @enum {number}
 */
proto.sass.embedded_protocol.ListSeparator = {
    COMMA: 0,
    SPACE: 1,
    SLASH: 2,
    UNDECIDED: 3
};
/**
 * @enum {number}
 */
proto.sass.embedded_protocol.SingletonValue = {
    TRUE: 0,
    FALSE: 1,
    NULL: 2
};
/**
 * @enum {number}
 */
proto.sass.embedded_protocol.CalculationOperator = {
    PLUS: 0,
    MINUS: 1,
    TIMES: 2,
    DIVIDE: 3
};
goog.object.extend(exports, proto.sass.embedded_protocol);
//# sourceMappingURL=embedded_sass_pb.js.map